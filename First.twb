<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0925.2120                               -->
<workbook original-version='18.1' source-build='2018.2.2 (20182.18.0925.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.04jch1h0y8ivw31dp1jur11agexd'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions].[product_code]' />
              <expression op='[products].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions].[market_code]' />
                <expression op='[markets].[markets_code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions].[order_date]' />
                  <expression op='[date].[date]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions].[customer_code]' />
                    <expression op='[customers].[customer_code]' />
                  </expression>
                </clause>
                <relation connection='mysql.04jch1h0y8ivw31dp1jur11agexd' name='transactions' table='[transactions]' type='table' />
                <relation connection='mysql.04jch1h0y8ivw31dp1jur11agexd' name='customers' table='[customers]' type='table' />
              </relation>
              <relation connection='mysql.04jch1h0y8ivw31dp1jur11agexd' name='date' table='[date]' type='table' />
            </relation>
            <relation connection='mysql.04jch1h0y8ivw31dp1jur11agexd' name='markets' table='[markets]' type='table' />
          </relation>
          <relation connection='mysql.04jch1h0y8ivw31dp1jur11agexd' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:profit_margin:qk]&quot;' value='Profit' />
        </aliases>
      </column>
      <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='Profit Margin %' datatype='real' name='[Calculation_718887130573029376]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_351280810874093568])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[pcto:sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
      <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_718887130573029376]' derivation='User' name='[usr:Calculation_718887130573029376:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Cy Date))' hidden='true' name='[Action (QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),MONTH(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.566667' measure-ordering='alphabetic' measure-percentage='0.433333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[pcto:sum:Calculation_351280810874093568:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_351280810874093568' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[market_code]' filter-group='2'>
        <groupfilter from='&quot;Mark001&quot;' function='range' level='[market_code]' to='&quot;Mark015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated) 1' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Profit Margin By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated) 1' name='[Action12]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Profit Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Customer Table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated) 1' name='[Action15]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Revenue By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated) 1' name='[Action16]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales Quantity By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue By Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Table'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_718887130573029376]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_351280810874093568])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_718887130573029376]' derivation='User' name='[usr:Calculation_718887130573029376:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:profit_margin:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]</rows>
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_351280810888462337]' derivation='None' name='[none:Calculation_351280810888462337:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='#d37295' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Pie Chart'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[pcto:sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:customer_type:nk]' />
              <wedge-size column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
              <size column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:customer_type:nk]' />
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[pcto:sum:Calculation_351280810874093568:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:customer_type:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'>&lt;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[pcto:sum:Calculation_351280810874093568:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Profit'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action15]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:profit_margin:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#59a14f' fontsize='18'>Profit</run>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f' fontsize='18'>&lt;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:profit_margin:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Profit Margin By Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_718887130573029376]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_351280810874093568])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_718887130573029376]' derivation='User' name='[usr:Calculation_718887130573029376:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action15]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]' direction='DESC' using='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
            <format attr='cell-w' value='66' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]' value='76' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='257' />
                <format attr='maxwidth' value='257' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='852' />
                <format attr='maxwidth' value='852' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]</rows>
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_718887130573029376]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_351280810874093568])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_718887130573029376]' derivation='User' name='[usr:Calculation_718887130573029376:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action15]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]' />
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]' />
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk] + [federated.1k9wihb0axmo7912wb4pz0iy11wm].[usr:Calculation_718887130573029376:qk])</rows>
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[qr:cy_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_amount]' derivation='Sum' name='[sum:sales_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_amount:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_351280810888462337]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='1' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='2' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='3' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='6' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='7' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='8' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='9' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='10' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='11' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='12' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='18'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#499894' fontsize='18'>&lt;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_amount]' derivation='Sum' name='[sum:sales_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_amount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#75a1c7' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#75a1c7' fontsize='18'>&lt;[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Revenue By Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]' direction='DESC' using='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]' value='76' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='233' />
                <format attr='maxwidth' value='233' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]</rows>
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Revenue By Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_351280810888462337]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='1' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='2' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='3' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='6' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='7' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='8' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='9' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='10' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='11' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='12' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' field-type='quantitative' max='30003386.352554746' min='-3394048.2299270099' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
            <format attr='cell-w' value='24' />
            <format attr='cell-h' value='8' />
            <format attr='cell' value='8' />
            <format attr='cell-q' value='40' />
            <format attr='font-size' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='9' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='9' />
            <format attr='height' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='9' />
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]</rows>
        <cols>([federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok] / [federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sales Quantity By Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_351280810888462337]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='1' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='2' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='3' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='6' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='7' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='8' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='9' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='10' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='11' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='12' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]' direction='DESC' using='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]' />
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='color' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]' value='bold' />
            <format attr='font-size' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]' value='80' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]</rows>
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:sales_qty:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_351280810888462337]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='1' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='2' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='3' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='6' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='7' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='8' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='9' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='10' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='11' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='12' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_351280810874093568])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]' direction='DESC' using='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='font-weight' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='bold' />
            <format attr='color' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='#ffffff' />
            <format attr='font-size' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]</rows>
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_351280810874093568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_351280810874093568]' derivation='Sum' name='[sum:Calculation_351280810874093568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_351280810888462337]' member='&quot; &quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:cy_date:ok]' member='1' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='2' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='3' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='4' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='6' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='7' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='8' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='9' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='10' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='11' />
                <groupfilter function='member' level='[mn:cy_date:ok]' member='12' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_351280810874093568])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:product_code (products):nk]' direction='DESC' using='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:product_code (products):nk]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
            <format attr='text-format' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='font-weight' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='bold' />
            <format attr='color' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='#ffffff' />
            <format attr='font-size' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:product_code (products):nk]' value='64' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:product_code (products):nk]</rows>
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1k9wihb0axmo7912wb4pz0iy11wm' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9wihb0axmo7912wb4pz0iy11wm'>
            <column caption='Blank' datatype='string' name='[Calculation_351280810888462337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_351280810888462337]' derivation='None' name='[none:Calculation_351280810888462337:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_351280810888462337]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Markets Name)]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='color' value='#f28e2b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard - Profit Analysis'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='4111' id='1' name='Year' show-title='false' w='16600' x='33267' y='2556' />
        <zone h='4000' id='2' name='Month' show-title='false' w='47000' x='16438' y='6444' />
        <zone h='55667' id='3' name='Revenue By Markets' w='20938' x='875' y='22778' />
        <zone h='8889' id='4' name='Revenue' show-title='false' w='15563' x='3438' y='14444' />
        <zone h='10333' id='5' name='Profit' w='7500' x='28813' y='12778' />
        <zone h='49444' id='6' name='Profit Margin By Markets' w='21063' x='21875' y='22667' />
        <zone h='39000' id='7' name='Profit Trend' show-title='false' w='42188' x='47875' y='15778' />
        <zone h='37667' id='8' name='Customer Table' w='32500' x='47500' y='55556' />
        <zone h='22778' id='9' name='Pie Chart' w='15500' x='74563' y='56556' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='4111' id='1' name='Year' show-title='false' w='16600' x='33267' y='2556' />
        <zone h='11444' id='2' name='Month' show-title='false' w='47000' x='16438' y='6444' />
        <zone h='55667' id='3' name='Revenue By Markets' w='20938' x='875' y='22778' />
        <zone h='8889' id='4' name='Revenue' show-title='false' w='15563' x='625' y='14778' />
        <zone h='56111' id='5' name='Sales Quantity By Markets' w='20250' x='22375' y='22111' />
        <zone h='8667' id='6' name='Quantity' show-title='false' w='13933' x='24333' y='14778' />
        <zone h='34111' id='7' name='Revenue By Year' w='56875' x='42875' y='11333' />
        <zone h='30778' id='8' name='Top 5 Customers' w='23563' x='43563' y='46778' />
        <zone h='27556' id='9' name='Top 5 Products' w='23563' x='67688' y='47333' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Revenue By Markets'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:market_code:nk]</field>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit Margin By Markets'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:market_code:nk]</field>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales Quantity By Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Revenue By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>12</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>11</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>10</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>9</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>8</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>7</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>6</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>5</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>4</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>3</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[mn:cy_date:ok]</field>
                    <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:Calculation_351280810888462337:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1</value>
                  <value>&quot; &quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Markets' />
        <viewpoint name='Revenue By Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity By Markets' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard - Profit Analysis'>
      <viewpoints>
        <viewpoint name='Customer Table' />
        <viewpoint name='Month' />
        <viewpoint name='Pie Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit' />
        <viewpoint name='Profit Margin By Markets' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Markets' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1k9wihb0axmo7912wb4pz0iy11wm].[sum:Calculation_351280810874093568:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1k9wihb0axmo7912wb4pz0iy11wm].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Profit Analysis' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXAcWX7f+cnMqsq67wv3RYAgyG422fetmVFLc4RkXaOxxhuzDq30x85u
      hOU/vA4pJIfCa3kdKyvsPxxWxO6s7VmPNLLG2jmk0fRMH+xuNu/mCYAkQBA3UPd9V177B0g2
      bwIg0TyQnwgGgUK+zJdV9c33fsf7PcEwDAMTk22K+LA7YGLyMDEFYLKtMQVgsq0xBWCyrTEF
      YLKtMQVgsq2xPOwOmDya5JYukVuawR7opNVWsNhcuIQ8ZTqJhW0kzp/A3vcSvX3xDbWV1TQY
      OoKnj+7+zptaGiQujZNOpgn4XKjtJt7ep1k9/T6Dn/sqK6feRVN1hl56C9ki3LOtu3MX7WqW
      SrGEVVBQ2wr9L/w8duunbc0RwOS2WK0WdFsQtZSn++nnaJaSRHsGMABPuAtFdNFzmy//vdqK
      6DTbbQRJuk1LAcFQ8UV7qNebDIwOk03niHR2AWB3eZC0GtWauq62+XwJpVog2DWAqhnEYj6K
      xfoNrUwBmNyWxNwMvoCP8OAQifFPCHbvJLO6QruUpV1L4+0c4eZn8HraSg4PdpcHq+V2X702
      mZUUsmwjFIsxP7NEZ3eUarVGKbWCNxTFGugj4LOuq200YKHWlpBEAW/AT75iEA65bmglmJFg
      k5upVCoPuwufGeYIYLKtMUcAk22NOQKYbGtMAZhsa0wBXIfebKJUW5tqW59bob6S//T3qSX0
      dbdNYBjQWEigaxu7rlqp0spuzmi9n+vez3ulFEo3XK86vbTutu10DqXW3sRVDZpLSdrlxg2v
      moGw61AzKSp5Az2RQgxH0PNp1JpB7FdfvueTIvP2ETzP76O9sEirLiA2ypQuL+F/4RkcYedd
      26Z/9C7hX/kiie/8jPjXv0zt3BSe/cOUjl7AvX8P3qHwHdsWj0zSahkEx2KULqawD3bTvDiD
      fWQY/+6uDV/XtasXtS1Bo0Lg+dE7tlUzKSrpNoJuAaWO3qqjlJpEvvw6Ftvd36vqmUnEWDcW
      l0wrXaedTuAe6bl7IwAM8odOI/g6sDlAjjrRsVOZnMUWjxJ6YfiOLVvz86SPrhB6eZTK6Uk0
      wYlFaJkjwDUMA72lYDTbiF4PzZUUWsvAamFdT3LR7cLRFaQ6l8LqtGEg4RvroL6cv2dbx3Af
      xQOf4BzuRqvWsIXcNJYyaIYdz+Cdv/ygU5tbpTW3SitXwTnaT2N2FaVu4Bu7Ocq6vuu2Sjrt
      mQvoguPODa+8Vxg67VyVVqaIWlOw+yTUezycDcNAb2vo9TpKpU47X7tnP6+ilXLUE03qcyso
      2RJquUJtehHHriHaqeJd21qicfyjYUoTl6kv5JHsEu1SwxwBrqE0qSxVCbywk+KJKdwj3Uji
      2hxxPU8J/3NjODoCBJ8foZZs4H6ql9pclsCrT9+zrXvnEGpnA6vbimB3UC+WcfZEsUejCHeK
      NgFGu0XordewuQwq5xeoLs0R/txTqNkSwt0a3u26cTfFWYHAnrs8ka+8V8FXxigePY/U0YXF
      ISFZuefTX0lnINCBdyRC4ewCrqE4gu67Z18BtKZO19d/HjWVAotAY7WIZ3cf6bePY+vtu3tj
      VaGZqeJ7ZidGIU2zCigt0w0K0FQU0qXqw+7GfaFVaxhWOxb5dikGGzmRSjNXxx71PpiObTGG
      olBfymLviSNZ7y3662nnyqYAAKothcvZ0sPuhslDwBSAybbGNIJNtjWmAEy2NaYATLY1pgBM
      tjWmAEy2NaYATLY1pgBMtjVmKoTJY0ST//qf/oqRXQM4g4M8tXM9CXR3xxSAyWOHgIBkkfjg
      vbexCALx/kEyZQG5kUT2eihWWuiGiF7J4g1HKdXayCK8/OpLvPfeB3jsgGTBFeo1p0Amjxfd
      /YMUckW6u6Kk0ykcHi+iLYheTdESLBRSCWxWCcliQXb52Ld/P3bRAK4mPBikU2kkqwMM1UyF
      MHmcUJmbW6W/N87k1Dwuq0q+3GBweIxGcQnDHiPiMjg9cQlfKILbJtHd28Py4hKC0SKVq2Cx
      u4l6LCyn83T2Dn4qgFarRbu9mZU2DxebzYYsyw+7G/dFvV5H0za4JOsh43A4sFge/xm0OQKY
      bGtuawNcTpZ55+wy75xdZmLxxhVNbVXjcrJ8S5tKo82Zuey1Y945u8x751bIV5pb0O0nk0qr
      yd+cPc3fn59AvWmR7oczl8jX7716ai6X5bsnT3AxldzQtS9nM+Rqa2siDl6eQdN1Ti4tbugc
      jyPSH//xH//xzS8G3Z9OKZ4ZCJMtNzkylcRpszCbqvDR+QR2m0RL0ThxKY1FErFIIgvZKv1R
      D422xmyqzJt7Ovm7k4vs7PRx6GISRdVpqzptVUPVDdKlBsVai9NzWeJ+J/PpCkvZKovZKlG/
      g9lUGZ/TxuVUGZfdyqGLSQzDIOB+vKc8d+I7nxznS7t2E3F7cNisfDBziROLC/QFgpxbXaHb
      HyBTrfCzi+fp8vkpNRr87cQ5AGIeL5VWk7/45AT/+IWX+P/OnSHu9TKbzRJyuTm3uoKm6/z4
      /CSKqhJwOvno8gwnFhcIu91899QnXEgmiXt9NDWFVLnMX548gc1iIVEu0hMIcmp5iYjLjSg+
      mr6Ter2O1Xq7sol3Zl13cmBihdfHOvjofIIdHV6G4l729AZxyBb6ox4+nFy9pU2x1mYmUcJj
      t3JsOs3uniAXV4pIosDZhRznl9ZGlpOXszw3FOHjC0kurZboDLpIFuvUmwoziRKqpjOTKPHB
      xArP9IcZX8yjauutt/B48crAIN8+cZSzqytYRYkun4+A08lPLkwCoBsGP5oY5yu7n+IH42f5
      yYVJRmNxOn1+ABbyefZ0dGKzWHi+t48LySRnVpZRNI0zK8vYLVb2xDv44cQ5GorCZDLBG0PD
      vDc9xb7uHr64a4y+YJATiwvs7epmNBbnc8MjLOTzJMolTiwuYLltUdtHg7vZUY1KkWQmTzGb
      otpoUygUaFZL6xOAKArYLBIWSQQE9Ctmw8HzCXTDQJJuvxRtfCHPC8NR2qrO8UtpbBYRl91K
      taGSqzQJe+0kCjWOTqeJ+hwIAngdVqySyM2GSbWpcmQ6hd0qoelPptkyFArzT3/uCxQbdc6t
      rvD2hfO4bTLKlQ/WMAyWCnl+OH6WLp+f39y3n0qryV+fPglAzONhuVgAYKlYIObx3HD+v50c
      p64oyBYLBgZBpxO71YphGEiCiHaTOWhc+RQ+P7KTvzx5goFQaKvfgi1DF63UykWKtQaZ5DL5
      fAG723dnAThsEh7H2nCyqyvA359aZDDmwW23oGkGk0t5OgJOVnI1/C4ZqyTgd66tiJZEgcGY
      l994ZZBTs1lGu/1ouoEgCFgkge6Qi7DXgcNmYd9geO0DEAWCbhnxyv92mwVVNzh6KU3ALfPa
      rjiariMKApK4sbWfjwvHFub5f08cQzMMRqJRXLLMarlE1OMh4vZgt1r54thudMPAKkmcXl5m
      IZ9nJBoFIOL20BcM8u3jRzm+uMCuWBxV1/jJ+QliHi87whEuZzMEHE4sokTU48EiikQ9HvZ0
      dvLhzCUWC3m6fH4soojbJvPBpWliHi/1dptX+gcf8ju0eZZmp9BEG41KCQ2BXDpFtmiuCX5i
      SVcq2CwSfsfdaxKth+ML88zlc3xt37MPoGdbR6VSwXPTqHcvTAGYPBHouk6lUtmwgf74RzJM
      thWLczMYkpVyoYjf40N1uiinVtm7dy+iKG54BLhvf9ZMosSBiRVqLYVSvc0HE6scvphEueKp
      uRoTeOfsMheXC5Trbd4fX2E+vVbPMldp8t65ZebSt8YWTNbQdJ0Dl6b469MnKTc/jaukKxX+
      6tQnLOTXPGqH52b50fg5FE0jX6/xvTOnSF+32UW93eb7587wztQFdMOg2Kjz16dPcnxhnlKz
      wffPneEH585Sf4QzApwOO2o1S6BvjGouQ0upUaluPtZ0XwKoNBSmVos8NxThnTPLCMBLO2O4
      7FYuLK15I2wWibf2dhPyyBjA++MrvLwzxsnZDLWmwgeTq7wx1knUe5dSfNuccrNJtz/Aa4ND
      /HD87LXX//LUCX5pz1N878xJZrIZVkpFRqJR/nZinL86dZKfHxnlO58cv3b8306Os6+7B1XX
      mUis8pcnP+HLY3vYGY2BAT8/MspAKMT7l6Yexm2ui2q1hjPSRyMxTWxgmJBdZnDnzk2f774E
      YJEEyvU2iUKdUr2N12nj2HSKY9Mphjs/LXenGwaXVkuMdvmRRIG5VBkMmM9UKFRbvDe+zKGL
      G4tcbicCTidhl5u/PnOK1waHgLU5r1WUcNlkAk4XF5IJxuId7IhESVZKWESRi6kkhXoNTV8b
      jZ/v7eMvPjnB0fk5+oNBFgt5fjB+lr84eRyv3c7B2Rm+e+oTXn6EvT39O3bSEQkzvGs3wbCf
      SKSDzrB/0+e7LwE4bBa+8mwfVknE67Sh6wZv7u7ky8/2cmo2e+24qZUiO7v8CILAl5/txSFb
      kESBDr+TkMfOF/f1Um0q99OVJ5pqq8W3jh7it198mYHQWrFcURRRdQ3DMKi2mnT4/KQrFYqN
      Ok6rjd9+8WX8DgdBlxvpimH4ztQFfu/nPscv73mak0uLxDwe/tGzzyMgoGgaXx7bwz/9uc9f
      C7xtB+7bC/T++ArNtsrzw1GKtTazyTKabvDKaIwPJxP84r4epleL7O4JIokCF1cKLGSqRLx2
      9g9GOD2XJVGo0x/xMNYTeFD39UQxnU7x04sXCDqdDEejzOdyvDIwSKZa5fTyEsORKK8ODvJX
      p05Sb7f5tb3PcDmbZTK5ysv9g9gkC6eXl9jf08P702vTm68+s59L2QxnlpfoCQTo8Qc4tjCP
      puv8wuguuv2P32fxSLlBdd1gNV+jO+zeitNva6bSqbV5+zq5lEkzGApfGwmeVO5LAOZ6gIeH
      uR7gwbAZAVy7A1mWH/sv0uOK03n/0VqTzfFkj4kmJvfAFIDJtsYUwGeAodT48MODHD92guZ1
      U/1m8jwn5++8t5VSL3Dw48McOvgR5db6bITF5bUdFzOZDNXMIsXbBEkXxj/hw2MnOXDgIMpN
      LpD8wjg/O7y2yGbixAHGp24fnzl65NCtLzaLLGYer512bloRpjN++hTZcoNIOMiDSjpenJ1i
      Zm4Jjz+EbL1xQUVyeR7R7sUqCczNzREI3Mb91iyyWFDxue6xAdUjitbIc+ZSmtdeewm7oHDy
      5BkuL67QFbCRUT0kp08yMzNHMOTj48OfoCISCvg4duQYL7z6Ov3dYY4eP0O9VCISsHD6fJpa
      YZnzExN4Yh189LOfsrw4j+R08f577xGOdVPIJkhdPsv5RBO1mETwRpiePEss3sHqzBQ9z7xE
      YfYCoqBQ0F0sTU8SjsWprM5wKWcwOtTJ4uwETSOEXk9y8fwEoifGJ4feoanbaNXLtKtFVMnK
      yeMnWE5lsTSSvHtyli6/jWOnJtAEiaD/s9tqqd1ub9iOvWkEaJMtNukLWzh0/DzVYpapywu0
      6yVqLY1mtUhT1Zk6P061oVAulbg8dZ58uU6ptJbLUygUUZpVxienuLpu5dLiMvufeYojhz4i
      fyVvpVBYS5WYuzzDxMRFDLXK9//+XcBg5uIES4kszUqJYjFPLrXCUqZKPpfD0DXOj5+joeh8
      77v/hZNnJ2k3Kpw+c46W+miuFLO44/zyWy9x5J0fsZjKUWtrLCzNX/mrwqXpWexim7lUDZsE
      5fLt9/0tl8ugtymWa+TzOSSlyGyqiC8YZ7TThWaPMzw8THc8RLlcprOjk917n2XXnlHOHj9C
      udy48lDTGD9zCtFmw9uxg9mzxymUy1xd1zQ2EOH44aN4O9dSDHL5PFZJYXY2hS7Z2bWjj3x6
      hamVAmSnKagyuUSSUEcnw6NPEQr6sYgGlTvcx6PELVOg5bkpPjx8loHBXo6dOktQLDG1UuTU
      qXFOn53kwqnDBLuH+OT4EU4fO0K4e5DJ0yc5P3EegFOnznDo8DGGeoIcOzUBQCWf5tiRw8iu
      EJcnz1CsVTg7cWntghY3qFVmLkyxc88YGBrNlsrbP3ub5PQ4p2YzBH0uJk4fZSld4sThj+ke
      Gub4kcN0Dwzz7N7dHD98GG8wiKaon907twHatSKnzkxgdYdwSCqaDsFAENHmwm13MDwyiOgM
      0umXcTgdtK4kvD3/3F6OHjrM3/z13zD2zH4sosrp8Ut4vE5arTY2pxe33YbX68bm8mK3gNBu
      sJzK4fV68XX0Mzt+lIZuxygu0//UfgBcXj82UUA1BGSrFY9RJNz/FAA2l5dgfIBCuchITxiv
      206r1cJic+Jz24nG1uIP/Tt2sXcoSt3RQ8Cm0NXXh8UVorF6kUyhhtNhp9l80AURDJYX5mmr
      CssrSSrFIpoBheLdt0i9GzcFwpocOHASr9zC1/MUR9/7ATtGRon1jZFYmESSnEitHEU8yFYZ
      q97mpVdf5uihIyiqyvPPPc1PDxxHr6Xo7N+B0x/jqZ0DvPfBe3z+zc/x05+9yy9+/hX+rz//
      z/za7/zPRJwWjhw6SmdA5mJOwW3V2Nfv42TKRW7xHM90hrHvfpl4c56fTRZxSGCUFsETxSo7
      oFlk3wuvUSsXqOUWWSy7eO25zSdGPaoYapNcRSEc2JiP+yrtWonj45d47aXnbvmb3q7x4fFx
      fu61lx7YlHfL0Npk8nmWljN0hVzk2yoeh4u5xRSvvvgMlUoFl8u1oVPeJACdQqFCIOAjnU7j
      sArMLmfZs3uURimLbvfjtUtcnBwn2DmAXTLw+nyUSyUsgsZcokBHNITHLjExNcvo2B4cNonF
      2SkyhRqDI7sIuGXeefd93nrr5wEolcr4PHbSuRqyLOLzepmanMAd7iDktCK6fNj0JqWWiN6s
      4A34uDA+QefAMD6HyMTUAiN9caZml9j91B6sT+hySRPQWyU+/uQi3fEwpWIJf7yDUmIFdyTC
      jr6+RysV4k7kkitYvRG8zsfToDV5dLmvSPBnRSje9Vlf8olDSaWpHzz4QM9ZVRTmqxXiDie5
      VpM+t5uVWp0Bj4eKopBs1Nnp8zNdKqEZBrv8m09BvhOO11/DFlt/jtN6qNfrNBoNisUimqbR
      39/P4cOHiUQiZDIZc0nkw6KYS5PMlhke2YEkQLFYRJIseDxu6vU6tVIeTyhIvaaQTiXweb2U
      6i1GdwygpNOU/vvfPND+/GRpiTficX6WTNBQVT4Cvtzdw+lGnYlCgV1+P/82mcRjtSIKAh39
      AwjCg51uWkZGHrgAms0myWSSmZkZXnzxRWw2Gzt37sQwDHRdNwXwsGgoGjuHQpz65CypUomx
      4T5qxTzuUAd261ox78TcNKslmZee38Xy7DSNSpOtSpl7LhLBYbHQ4XAy7PMxUchTaLewiiIx
      hwOv1cbrsTgRux1REFAMA9sDFsBWUC6XOXPmDLt37+b06dO8/PLLrK6usn//fhKJhFkV4mGR
      TiyTz5dwer002jo+tx2rxQoYqKqC1WJFbeSoaW4ajTKBYARRbRCIdaGenyT7J//6Yd/CAyf0
      B7+P6+mnNt3+sTCCTe4fTdOQNlGiUFXVDacwb6bNZ32tq6xXAO1D3wJBBKvdnAI9juj1OsrS
      0sbbaTqqdO/0L1tfH+IG/emPC+qlA6jjP8Ky+ysI3pgpgMcRZX5hS6dA0X/xh9jHxrbs/A8L
      5eRfoC1+Qu6L/46O7j4OHTq0dQJQazVIpzbURtd0xHU8oT6r4zfaxjIwuL5hXKszeXGBju5e
      gr7bP2m1epG6xY9nneES3TA4lkkTdzhpaioui5XFapWxQICgLPNxKslOn49T2RxDXg92Sbpi
      4D75i3EMQ0f58M9AtCL/g3/LwuEj6IKFRqNxdwHcj6tOTyRo/pf/tCU3pBsGH87P0+Xx0tY0
      rJLIUqnMaCRMzOXi4MICAYeDaruNTZLYEQxyJpHkC0NbW+7D+6/W+VTWGlTqKs7MCkcOTrNj
      1x6UdhuPLNAyrORXZohGIpRsLTrcoDQqVNoiMa8Lb/z2bkJREJBFidlKmVK7TV3VkCURv2xD
      Nwwm8nlW63XeiMf5zswMFlHkn4ztfoB3/2hitCq03/+XSL2vYtn9K+i6zuzsLIFAgFqtdncB
      PGquuqsIgMtqI1Wrslqu0OHxIAoC5WaLpVKJcqvFpXyeRlsl7nFTaDQZT6W2XADrRrAiWyUE
      QaR3aBiP241sESjm0jSVFm5/DFHQcIoqiytZhvq6cWpt5hcTPH0HASi6TlPTkAQBv03GZdFp
      6xpVRWFWLROy2+lwOjmaTvN8OILHamWlXqf7CZ3rG2oTbeFDtOmfYn39nyO61943URT5xje+
      AcDu3bvvLgDJ0JiaWiUSD+IO+rHb7Xi6+7jqqrPZHIguJ512N1NTFwkEI3Q6Gmja1jqWFF3n
      dDLBa7291BWFRKVCS1Pp9nqRBBHdgB3BIG1Nw22zkW80eK23d0v7tCGsXvY9c+scW2s3CLlD
      +D3XVckb+DRyHop2AHC7CkpWUeSVuwSRXohEN93dxxHt0o9RJ/8b8j/4NoL1zlUHt8wNquSy
      6GfP3vvA69B1fUPVfbf6+I22kT//hft25a2HVjJJ8+PbrMi6B+u9F9ebb2CJRIDH1w1qaAq0
      ygjOu2/qsWUC2Aoj2DJw4xRmo2/YZ/GhfBYCMOMAt6dSqTA1NcXQ0BDj4+PE43HC4TCHDx/m
      zTff5MCBA8iyzGuvvcbBgwf54he/uH4v0NLSEl6nhGYLE7zJNVGpVvC415TXrNexOZ23GMGF
      RoNjyys8HYsxk8/zRn8fy6UypxKr7InGyDfqiIJAl9fLRCp92/n6uo3MJ5z2wgLl7/zFhtsZ
      hnHH/B3Xm2/gfvPN++3a1qIrTM0s0hnxMruYwu+x4OvYwcL0efbufRqA3t5eFEUhGAwSiUTw
      +XyoqspPfvITcrkc+/bt4+2336azsxPYQDZoMpmEoJVMuYHR4aaoNKjmSzg9fhqlDMFYnItn
      ztC9+1lG+251rS2XyyQqFQYDAXL1OgDdPi9Hl5cYCPg5m0qCAblGg09WVh8dg/URxKjVaZ2/
      8EDP+Vj4/UUrPo+TUq3FcIeP2bpEa+YcmtWHruvous78/DyiKJLJZHA6neTzedxuN6+88grZ
      bBabzYbL5bomjHULoCfqp4GE2ymwsLhCdKgPv9MLGGSaJfRWg1hXJ8327X1AVlEi4nJRbrfI
      1uscXlxiOBSk3+9npVwhW6szEPDTVDVe63uEDNbPgKNHj9IZslG39DLQ4aalNCkVK9gcbjKr
      8wwM7yKdSOLz+/AHby0asFit8rOVZbqcLnKtFm6rhaqi8D/sGOZcPseZXB6XxYIogCAIiILA
      L/f2PYQ7vU+0FplslngsylyhSl9nlKosEHU4EEURURR54YUXbmk2NLRWUbv3iiMkHo9f+9u6
      BRDvG77ut4Eb/ha6ze6BQsCP/PkvXPt975V/AK9ed1z3lf//VzZnpD4JuG0SbcFCMZkiqRZp
      2GUcuoHabuAPhlmZmaRcqbJU6eaN2wjAKorYJYmGphKQbdRVFd2AZL1Outnk9Xic8cJaMYLV
      ep1h72dXqeGBIsk89dRaslzkSm3UjSa/3cyWWWuC3YE0MHDvA69vc5MRLMU7EBxP/sYZI2Nj
      KKpBZ4dAOpOnNxpFQgAMsqkEPSNPkUsmcAcjt20vAM+Gw3S7XGSaTVwWK1VlzVna4XBSVRSe
      D0cQBQGLINyyHep25rYCWF5exufz3VFd7UoFPB5s3JqBV69UkD2eG4zgw4tLxN1ulstlvLLM
      7miEdy7PMhwKMl8s4rHZsFusqLrOjlAQv90OgPN/+p1bPD9PIja7i6tuhf6bAlNdvf0AdPfd
      ecoSdzqJX6kv6rGunSl25cERN+uO3pVbBKDUciSzVQxD5fL8EmGvnVyxgtvnY3Fqklj/CK1c
      AX9fhMXFPFGPBbs3xNL0OTqHnqKQSrH3uuoD1XabM8kE+zo6sEoiYaeT85kMO8MhJlJpREHA
      ZbUxnk6haDoRl/OaAExujzy2i96/+ssNt/ssXLSPG7e8G/lSHY/cptr20NO5Zix0u30gaDTj
      PXgdNgp2O5oGQZ8Hm0VDNFr4Y10o9SY2u/3K4L2G02qlw+1BEkQaqkLQ4WC1UmEqm2BvPEaq
      WiPsdFJX2oCA3fyA7smDSIe2RCLXgl3bmUc6Emzdtx/xdqUSr7BdA2H18Yn7Tof2/cav4/uN
      X7/ncY9bIOyRqQqxUSN43anETzrtCsWWgCDartVC1eoVWrIHsbUWZLzKXKXCYrVKzOGgqip4
      rGvG77PhCGdyOayiiKLrCAI4JAuqrjN2lwfKdmQD3zaN5eUUbrcT/zpKYuiJBGf+9P/EKoms
      VioMh0L4ZJmjy8v0+nxM53L0+/20VA1V19n/7/49bre5nRLtKsfHszy7I8T4bBGvV0ZqtUjU
      2nhDHezs/VQAEbudY5k0qqFjEyWS9QZXA72r9RpRh4P5ShUwSDYa7A3ePS9mO7IhAaRWEtSj
      YeYunsMV7ERplcAewWhU8MfCWIBKPkvX4CjoOpOZNJpuUGg0kCULL3R3oWg6E6k0LU1lqVQm
      VauiaDqDxaIpAADJxq7BToqV0trvgoBgtbNzKMZy/sbap4dSKfrcbsKynYulIkFZpqaqnM3l
      6HW7SdYbeKxWJEGgy+WirT2axYMfJhsQgED/0ADLiQR2tx9Rb6G1m9T0Fh5JpF0vU2xBR7QD
      pyxR1DT8sp2GqmIRRZqqyvHlFWRJwiZJtDUN3TDocLsBAbvp+VnDEaLHAXDr03rspvjVL3Z3
      X/t52OfjZvaYs517sgEBWAmFg4TCQQAMrc3sQoKRrjj229Rkd0UjfPl3f3fdZ5fjcVT10azu
      /KghRcLrMmBv5nongzy260F367HkoaVDC3Y7UkfnjW222OPypHiBzHTo2/NgvUD3uXBbXV3l
      vX/5x0RdLlbKFfr8Pjo9Hg7MzTMaCTMnSkS+9g9xOByoqsrOnTtNG2Cd3E86tNzUG34AABpT
      SURBVNzfT+B//MYW9Orx5C4CuL+F26IgIEsWlstlHBYrxWYTzTBoqspaBNi3lsJ69uxZFEUh
      FouZAlgn95MO/aDreT4MDF1lJZHF57Lj9Pkpl4oENlms984CuM+F221No3llTj+ZTvNmfz+1
      dhuvbGckFGI5ECAajVK/sjZgexvBbY4cOUdHZwRZAl+kk2xiCX8oQqlUIXLF7lIaVSTnmmWb
      b7V4f3WFDqeTxWqVIe9aPc+vDQxSaLd5e3mJL3X3cCSdwmGxoOoGX+np4UnYCTqxsoLV0FjO
      lvHUatc2yNB1nXq9jiRJ1zYev9fPdxbAfS7cJhzird/+7TuefsTvxzY6yujo6LXXtrMRHAt4
      SOUreC1tVuYXiPd3MzGXodtpMJ9KIikqGDA8HKYOtDUNh8VCj8tNRVHZ4fUyX6mwXK/htdpw
      SBZCsozDYqGuqhiA9AQ8/QFsVomllRz+eAfZxAodnZFr6wE2uun4hi2OaEf3vQ/i3pFg0W/6
      6D7FQtfAIKFmnXq1QndfP8ePHKNv9CkEq5VOh0hDs+D3fGqLyZJEUJZRDR2fzUpNUdjp8629
      phs8EwqRaTUJyjLPhsLIkoRiGDwJ42w43k04fuV72NVxX+fakADK+QyrqRyRzi5Cvttb28Vi
      Eb/ff80I7nB7mMnn+YUda6tyPpqfp8/vZ767h74vfRlN00wjGBFZFpFlH74r/vwv/OKXbjji
      5iUsAVnm5SuLQgY9a3/tue7967jyJOxxbdf3dH1sSACVahWtVSOVybC8vEzAYaGFjNYo4vIH
      mTp7hsjQHvx+/zUjeLFUuhb0ms0XWK1U8NnttGo1pqamqNVqphG8Qcx06AfHht4Nm82GZLMh
      OzzEAj5qpbVldq1WE2d7bU2wJq6d8qoRbJMkMrUaFzIZFE3DbrEyXywi9PUz1N1NpbK2l+z2
      NoI3xkbSoc2057vzQAJhrXYL2Xajf+Fe6dDSwMBnXufnSQmEbSQd+vq05+0QCLue68vA3Onn
      B/JJ3fzlh1uN4NtFfrcjD2K5KcB7qyu8Ge/gRDZDn9vDhWKBL3SueeOurwT99OXLxObnsdls
      RKNPfnnEO72vd4qeb04A68hZ1xMJfviHf8Brvb2cXE0QGB3l1T/8I44cOUJvby+Tk5P09PRQ
      r9e3jRH8IJeb6oZBttlkqlTCJko01DX/drbZvKES9Pc+OYGn1eSP/uiPrvnAn3RSq0t4QnGc
      svXaa5IkUS6XsdlsN0y3NymA9eWsa7qBRRSvrQUul8ucOnWKc+fOEQwGSSaTqKq6bYzgB7Xc
      VDcMMs0mxXabsCyj6jr5VpOLxSJlpX1DJegXX32FrrfeYmFhge7u9bmwH2f0epa64KG6vIho
      qOSKFfp37CTs97B4+SKGI0Tcb6euifjdzk0KYB0567phkK7VmC8WaWsaAYvE2bNniUajuN1u
      yuUyPp8P+Uom6XYwgmOdPcQ6e277t1BwbXrSvY6aYIog8PWhHQCMXkkBePG66c31laB9L72M
      7+WXge0RaBQsdorpedwemUqxcc2tDBCK9zB9aRoHYeqaRKuwhbtE3mwEC34/tv3P3rWNaQSv
      j41Uh5bHdl0re7gdjOBHZk3wVdbzxTfZGJZIZFPrAZ50NlMlbt0CmL88jd3rwioGCYXuXK3t
      anXoRibL9//Df2DH/v3sG93FD37wA/r7+8lkMrRaLURRxOVysWvXLvr7+zfc8e3MndKhY//i
      jx5Cbx5v1i0A0WYnHvFx4sgkc6JBslhluC+KYljRmyWcbjdTE5OER/bz4u5B9Cszq0u5POGl
      JXbv3s309DSiKDIyMsLHH3+Mz+ejVqtt2c09qWxFdejtyroFYBMNkpkqo3t20yjn8QTbdHSE
      EQxA6MBo19F3jWG7YnTYLRaCTgejPV0Uy2VSqRSvv/46mUyGWCzGq6++iiRJRMwoJQAri3Nk
      kknkSDduq4TfLdPGRruaxxOKkUkkMSSBwb4+2rrGty9N0+FwMlut8LsjO8m3Wvzdf/yPeL1e
      2u023d3dpNNpXn31VQY2WKN1O7H+6tBdn9am9Hi6uDWk4sEb/HSPKktnJ1/63//VLQGwq6Wp
      t0NQZqM4XA7abQ3DKpLKFgCw222sXqkOXXd1M9gHqm5cq77X53aj6Dqr9To2mw1RFHG73czM
      zJDL5filX/qlh3pPjzpbZgQbzQb63BzWffu36hJPFKFgkLoiMNzdgQC0G1Xa2EivzNF/U3Vo
      p8XC/nCYLqeLqVKJ5XqdLpeLyJ49jI6OMjk5yS/8wi9gtVrNKeY9uKMA8rkciqoQi609sZVy
      joYjhNd643G5XO6G/QHKuRyOUIh2Nsd7/8+3kH7l1/jKV7/KD3/4Q3bu3Mm5c+eIRqNks1nT
      CL4Ou9vHsPtTn/XV+EjIv7b1z83VofcE1laJvXTdSNr70ksAvPrqpzswuJ7QbVCX52dI5UqA
      hb3P7r3jF7lRznP+0hyBSAeDvWszkdXFWRqGzFBf150FMH95GsHhoVUvU64qGM0KTdsypVKD
      zoAdURRZSFfpjbjI5DIsXrpAuHsXWqPK3lAIqySh6QYv7x4jkUhw+PBhVlZWuHz5MoODgxiG
      YRrBm2Sz6dBPEt39O1hOHOKll1/F0FUmJiYZ3LkHpVFmZWmJ/p27cdokxscv8Myrr14rPz93
      /hRNVyddASflUunOAhjZtQdV01iYm2Vk5w7m55bpCocI+hWiQR/tRhXJ4cMuqlgdbsThXTgd
      XkoVEQnQgLjHjddqYzKR4Pd///ep1WpYrVYymQztdts0gjfJ7dKhRacT2zYdSY8e+pinnnuZ
      o4c/BqXFy2++zuFDH/OFz71JKOTj3InjILt57ukxltIl3vi5tWn50SOH7iwA95Wggv/KHH7X
      7pvWB3s8hK6zY+NXNmm+mm1idHTw/O//AVK8g/1XNmu4WlPUNIDvD2V+4ZZ0aHls1/aNA1yX
      y2CzO7FiIIhrmZ8Oj5++HTt5/4ODwBhdES8X55N0Bp3oqrr1qRD3KnF+PdslFeJ+7av62XP8
      +J/8HlVVwSFZkESBfU/vZfL1V7FarbRaLcLhMBaLhZ6enmtu0CctFaJcKuH1+TB0lcmJSQZH
      93Dio/fxReLsfmoPVlGg3ahy/uJlRnbvwWlbE8XKwmWaOOiJuDfmBcrlc7SarWt7rN4NLV/g
      +3/+57zyv/1zwmNjfPDBB8iyzOrqKqOjoywuLm5bI/i+7StRRDMMXopEOZnL8mwwSqPZJJfL
      IUkSwWCQ48ePUywW+ZM/+ZOHfbtbhvdKzEkQLex5em0LxmeefxGf79MV1DaHm2f27b2hXVff
      0LWfNyaA5AIWTw+HP/gZPr+fsiIhO3yIjTKOaAgZqBXzDIw+TUNpM1csIp87x689/zyKovD8
      889TLBa5dOkShUJh2xrB92tfqaztAeaXZbqcLkRBIC1Ad3c3fX19rKys8Ju/+ZtYLBbm5+ev
      bRO6Hbj+y78eNiSAjt5hlLaC0NOP02GnNxBmdTEBsh+/VaTSht7BYZyyhGSz8XQsRv+OIU6d
      OsXQ0BBOpxOfz0c0GkXX9W1rBN+vfQWfpkFf/X9fZyexr3wFgD179mxBr59Mtrw47ka2Ot0u
      NsD9olQqaJvwAj1pNsCDYEsjwdZtsMXpw0B0OrGO3Vq1z2TjbEoA0xcmkBx+hvq7b1jEfT1G
      oci3/+7H/NZv/RatVou3336bcDjM6uoqoVCIarW6bY3g+6V1/gLZP/nX29v1eR3lTJLlfAWv
      10N3R/za69cvkKnX6zeUTUymUsRjsc0JoN1q43Iq/OzH38fn7SY03ElpYRW328HEhTm+8hu/
      hAgEAgEMw6DVapHNZpmbm+NXf/VX+e53v0swGNy2RvD1tFptZPm6x4fWooWMfJfy/wYGZ/M5
      xhQFUilkWcbn83H58mWGhoaYnZ0lElmrl9loNJ54O0tptzFYq0919sTHNEQ7NmwgqAQdTppu
      L/ZWjmxFRBaaFFoivTE3b//tqc0JoG9oBI/LhtJq4fcEaOgGI2O7adUKjI1aEFlbE6yqKjMz
      M5RKJfr6+tixYwcXLlzgq1/9Ks1mc9sawdeTz+dxONbWQyvNGkarTF6IEbA1qDQ0HKKKKNuR
      BCuCoeEKxzAMqKsqp3M5Kn//9wwMDPDaa6/x7rvv0t3dzYEDB3j66af56U9/yu/93u895Dvc
      ehweN1K1hc/nx22TUAQb7UoRly+Gpuh0dndQL9pRtTSyM4IbC363jR0jA5sTgMezVr1hZGT0
      ptedhK+MQGpnJ782PHxL25GRkc1c8okll1rFsNgoVOp0hdx4ZIF0KoGjI4DbbiWXySE5oVZK
      ALA/HqdsGCi6znIqRUSSmJ+fx+PxkEwmuXz5MsvLy0SjUQYHB0kmk5taKvg44fQGGfWuJQcS
      uLJPQEfshmNs/iB+f/CG1/yB8NYawTyhmYgPkj3P3JouHr0u8TPecWv1Y6so8ka8Y80G+Man
      u708++za2uvdu3c/+I4+oWxKANnUKtlKi9Edt640ump4XG8EK4rCBx98gKIoqKqKzWaj3W6b
      RvAmEVxO5LFd2G5KkTbZOJsSgNPpQMmUmV1YQGQt+iuIAqv5Kh6bxDMvvIzAp0awy+VCURT2
      7NnDe++9h6Zp6LpuGsGbxNbXt+29P5VilnSxQVc8ss6aUhrNpo7dfmPC1aYEoKoaVtmG67ro
      b6texuYOYReVa9XLrhrBrVaLoaEh4vE43d3dxONxRFE0jeBNomYyVD8+hBQJ437zzYfdnYdC
      PpcHyUEqlcQqgkV2kC/VqRWTdHb3IxgtWqpMW1NxWTRkj0x2uYHVK+O26CA7KWWLWxsJtmzQ
      BjAjwevjanXojcYBnqRI8MLlaVTJgUXQuDR5Gk+oB3cojKzV0S1Ohns8fDKRIRB0kZydxB6J
      4NFdzOayhGxtNLuP3o7erTOChW1Q6vBBsdGaS7phcCSdwhkM4Hr/fdxuN6Ojoxw4cACn04mi
      KBiGgcfjuSEd+kmib+hTb2JfX/9tj3l+/1oq+Y7+T8tR7rzpmHUJIJfLEwpd50Jq5MgR4i6f
      FZqm8b3vfY+hoSF27NjBO++8w44dO1hYWKCnp4f5+XnTCL7CRmsuiYKALEo0MfBZLFSrVbxe
      L6qq8sYbb/CjH/2Ier3OwYMHn+h06AfBugTQbreZX1gAQGvV8MgCk8kkvSELlbqGlRaSLNNs
      qAi6yo6n91ErFolEIszPzzMwMIDFYuHHP/4x3d3dLCwsYLFYTCP4ChutuaToOk1NIyZaUFWV
      cDjM5OQkIyMjVCoV/H4/w8PDfO5zn9t26dAbZV0CaNXLSDYHhUqdzpAfXdcZHXBis1mJSVDK
      Z5CcfnS1iYCAyyJgD4XQNI39+/czMzOD2+3mm9/8JsePH+eZZ54BMI3gK2y05pJVFHklFkOO
      Roh9/vO3HP3WW29tTUefQLbMCL7Tjhx3wzSC18fVdOiNLoR/kozgm0muLJLJVdj19O7bPtVv
      ToZbu2Bt66tDmzx4zHToW2m327jcblYW56nkMyxlmwz3R6jVWjg9fijNYwv2s1pWcepVRIuN
      p3bekgukcO70JMGOIA5r5JpH4ubF2beglMk1HISuW9V9vRE8OjrK22+/jdvtplKpEAwGKRaL
      phG8SVrnL6BMTZkl0q8j1tmDLMu0Wi16OjtwLqfp6oyCwVpcqiNMJp1h92AXslVYqyQhWm4W
      gEG7paCpbWbnJpkTbXTFfOT1NosrCfRqFtHnRy0riFaJRDpPX5cPq2ynVGnR6h+jM7I2zBRv
      MoKz2SyNRgOPx8Px48fxer2mEXwbtHaDpVSB/p67Fx6YW1rkaV3n2LFj9Pb20tnZyYkTJ9i1
      axcnT55kcHCQYDC4LdKh4dNKelf/H+y/eScemZ6+W+NSNwlAwu1xYnd4Gd3TRataJJkpEIr7
      aUhOLB4HFqcDT2+AVrWAy+Mj4LdjGNDVG0SttSjVwOdyErrOCJ6enqavr4/+/n6Wl5f52te+
      RrlcNo3g25BMJmirForFIgCVYg6r3UVbUUksL/HMC2vbHR04dJih3/kdDh48yDe/+U2azSaG
      YfDd734XWZaRZZlvf/vb2yId+n7Yukiwql7bi3W96LqOKIqPzPH3cw1RFDd8/wDlQpYLlxbw
      emRqLYOOSJBaIcVMss5g3MPgrr20J8f5N//sn/Hr/+b/IJPJkMvliMVivP/++3z961/n/Pnz
      pNNpfD4fL7zwAsNX0tKfZCN4szxSXqCNttnq4z+ra2yU+vjEpmyA7ScAjYuTF+noG8LnvjEz
      oVgs4ve6ts4LtNEn7WbabPXxn9U1NorgciJFwlt+nccfjWq1QbNaJJfXENpVEEQmpxbYNTaM
      3y1vYS6QIFDMprC4AqitOg6bhCY5cd602HV1aR67N0yjUiQc9KFZnLTrZfz+W8spGrpKqVLH
      JYvkqwp2UUWwe9HbDdwOGw1NwuO8ftd6g0KhRMDrYGpmkZ6eDip1Bdki4Pf7KBZK+K+uILpC
      o1Kk1NRxSBqC3Uu9mCEciVBtakhqG2fAj6C2WFzNEg24SOZrhDy2e/TjwWLr60MaNCtu3BsB
      m82CARi6jigIGILIjqEBHHY7IGxtHKBYa2BU6mQzGWJBG7prB/0dN26GvZpIMCiJYJc5d3GZ
      eMTD/MIcr7/2+i3na7faVKs1SsU2uq7TEAWMUpVMNkNHLIimu/D0X7eCSlfJF0pYmwXqkp10
      Joeh65SqeWq1GKlCk/03CUAXrdTKKZoWESOfAFuM5UvjpIUYtsw8O954HUnRENpNFlZL+AIx
      CpXK3fvxgFEzGZR8/tr2pyZ3wsrT+5656xFbOl43KiU0JPxOC3XtdpfSCQUCJDI5Uiur2Ox2
      2tUsntDtvzya2mZpcR5FUSjVmrRqZRRdIO53kq9r3GJyGjrp1CpVwYGluEKx3qZUa+KJdJBI
      pAi5rbdcY2l2Ck20rZ3bsFHMrGKxyVhoI8pra2sruRTZSp1QIMjy0tK9+/GA0TJZc5O8B8SW
      GcEmN/Pggoz18Qn+85/+Kb/7rf+bAwcOEIvF6Ojo4MMPPyQcDlMoFJBlGa/X+0RXh34QmKkQ
      nxkPLsgI4AUymQwHDx5k7969RKNRrFYrR48eJRKJoOs6H3/8sZkOfQ/MEeAzY80lF4hHcNo8
      NwYZGwYWvbkWZHSuBRmz5ca1IKPLuxZkFJ02fC4n1XPjfP9b3+KF/+WbdHd3Mz8/T6PRIJ/P
      MzIywuTkJJ2dnYRCIRRFuZYObY4At/LIC6CQSeDwBWm1DHyeO68yK5XKt5TGbtdK6LIPtZpF
      tbjxu5+MVWpmHODB8chPgS5OTWK1iBQrLmSXSDzkRlNaJPJNbLLEUE+MTLlNubCKy+IgV6rT
      PxDDaDa4dP4su976xyQuXkRTJTx2kVpbJRQKkk4X6Orvw2kVKOZSKJrE6VPj/MNv/CNsW+/K
      vy+s/X3Y4rF7H2hyTx55AWBxYNGKLK0WifkhX43yYrfAbEVCt2p8cuo4qyXYPRimlM8wl6iQ
      TU4jq4DHDhikV5ZpCS56YhEMSeTC8Y+wheKcHK8hoxIJro0c0eDjUUFNdDqRnvBqb58Vj/wU
      yORW6uMTiJK44TiAOQW6lUd8sN8+tNotGo3Guo+fm5tD13VOnjxJpVLBMAxmZmYwDINTp06R
      TCapVqtkMpkt7PXjz6M/BdomLFy+iM0Tx6oncTqdrCRzBCMRysUSsVgYgbXU6FBHPwDvHzxI
      z5tvYrFY+OCDD/jSl77Eu+++S6VS4dSpUywuLjI+Pm6mQ98DcwR4RPD4gyjNOjNTF5ifnSbU
      GSORKNCqVllOLDMzv4RoteOUJXTDIJsvcOHCBb7zne8wPDzM2bNnSSaTFItFZFlmcXHxWnVo
      kztj2gCPMNfvcHI9pg3w4DCnQI8wd6rrL7icn0na9XbAFMBjiK2vb8sX3WwXzMeIybbGFIDJ
      tsacAj1irGcLWl3X+eijj7Db7ezZs4e3336bwcFBLl++TDS6Vlixo6ODnTtvroVscjOmAB4x
      1rMFrVUUsdvtlMvla1vQlkolLly4wODgINPT0/zZn/3Zw76VxwLTDfqIUalU8bhsTM/Mrm1B
      axgEPV5atQKZbIWhPaNojQZHjhwhHo9TLBYpFovs2rULl8tFJpPB5XLRarVuGQFMN+itmAJ4
      DNls6RVTALdiGsEm2xrTBngMMQwDTdM+k3YP61qbray3UUwBPIZcLb24UQRB2HC7zbT5rK91
      P5g2gMm2xhwBHlPOnzuN7I1gNAt4Ir3EQr5bjtGVJtPTF2jpDrRWE1/ITaXaJhZw0tCsDPZ1
      3fbclUKaS4s57EIT2e2mXKjiisSxqA0GBgdvW/dIqxc4N5Mg5HeRTRfuea3l+cusZMqEA07q
      bQEbTQTZi6hU7ng/W4FpBD+muLx+REMlm8thl29fhlFAR/bECfkcxEI+2ljxuR0Uc1ksd2gD
      sLS8SrNRW7uG1sAf6aRcLtHWuGPRL7XVoKW2WF7NrutaoiRiMUC3yrgdVmSXF6to3PV+tgJz
      CvSYks8ksXvDWNBQNe3W/a8ArV1nZm6Jjq4uKpUa0YCLfFUl4HHcsc1Vms0m9UoRuzdMOZci
      GAqjaxo2hxPxDipYXVok0hEnnSnc81pqq85KpkTM76Sqilj1JqLdiyxxz749SEwBmGxrzCmQ
      ybbGFIDJtsb0Aplc48N33ybQtYOAXccZdHNpPIcvJNMR8WLY/UyfOUqpVEKzeujt66a/uxPD
      4sAtP76Lc8wRwOQaY3t2MzM9xdzsLIePHmd5/BjnpqYYn1kmmUrTUAwGO4PUFZGe7hDf++9/
      h8X6+H75wTSCTa4jm1yipskI7QoOnx+bYGFxaZFwyI/TH8UhtDh5ZpI9T+0mm82SzlV48bm9
      D7vb94UpAJNtjTkFMtnWmAIw2daYAjDZ1pgCMNnWmAIw2daYAjDZ1pgCMNnWmAIw2daYAjDZ
      1pgCMNnWmAIw2daYAjDZ1pgCMNnWmAIw2daYAjDZ1pgCMNnWmAIw2db8/2sTHYYxDomzAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='29' name='Month' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARt0lEQVR4nO3da3BUZZ7H8V/f77mQdCckkEAuahxNUAZRGBhlGG8zxkXHorSmalwL2aq1
      drZ2q1hfjJZO1dbqbpU7O1Y5vtjZGledEguio6iAiIKOCAQikhAJkBshIZB00un05ZzT5zzP
      vkjCxphLJ+nup7vP/1NlhZKQ/Ds539Onu58+x8A55yBEp4yiByBEJAqA6BoFQHSNAiC6RgEQ
      XaMAiK5RAETXKACiaxQA0TUKgOgaBUB0jQIgumYWPQDJLlyLAZoCrsoIaVZYrDZYLSaYjOm5
      r6UAyJy4FgNiEXAlDBbsBfO3gw13gUsBcDkExKLgSghcHgWYCjANYDG8FNiKHr4MZpMRFrMJ
      NosJTrsFNqsZdosZ+R47Sgo9KCnwoNSbA5vVBIfVDIvZlLLbRgGQ72HhAWi9J8GGusD8F8BG
      esDDg+AR/9gGHqdwOAK/Go3rcw0GINdlR0GuA0X5Lixd4sHyohysqipGvsex0JsyJwpA5zhT
      wUf7ofU3Q7t0Alrf12CD51I/BwcCIQmBkIT23uHv/F3xEjduWulDXVURKkryUVLggdFoSMj3
      pQB0hnMOyKPQLp+C2nEIWt8psGAfoIREjzaj/qEQ+odC+ORkB+xWM5Z4HLi50ofayiLctNKH
      PLd9wV+bAtABzjnAGdjVVsRa34fa+Tl4sFf0WAsiKSr6/KPo849i//F25LltWHdTGX68qhxV
      pUtgMhpgMMR/72Cgt0RmL840MP8FqO2fQj23H8x/IaXf/7fDv8J5dXnKvp8v34XbbyzFhtqx
      GOI5TKIAshCXAlA7DkP55m2wwTZAlYXMkeoAJphMBlSXFmBjXTk21pXB47TN+LkUQJbgnANK
      CLEz7yJ2ehfYcKfokYQFMFlRvgs/u6MaP1ldAbfD+r2/pwCyAJcCUFreRezrP4OH+kWPc006
      BDAhz23H/bdX4Z41Vcjz/P+DZgogg7HRfsRaGhBr3gUeHhQ9zvekUwATnHYLNtaV44E7rsMy
      Xw49C5SJuBJGrHk3lKY30mqPnwkiUgz7jl3AF990o3799RRAJuFMg9ZzDPLRP4D1nRI9TkYL
      SzG8dbAlewNoaGjA8PAw3G43HnjgAbhcLnDOcfToUZw9exa33nor6urqRI8ZF845+EgPlMb/
      Qaz1vXktRyCzy9oAjh07hh07dsDr9V77fz09Pdi3bx+eeeYZqKqKDz/8EJ2dnXA4HFi7di0a
      GhqgqiqqqqrQ2tqKHTt24IUXXkBlZSXC4TA0TcOmTZvQ1dWF/v5+VFdXQ1EUnD9/Hm63Gw6H
      A7IsY+PGjfjkk08QDofx8MMPo6qqasG3gyshxM7uhXLkZfDo8Nz/gMxLeq5RTQBN0/D2229j
      586duHDhAnbu3Inm5mZUVFTAYrHAZDLh0KFDeOqpp9Db24ve3l5UVFSgrq4OVVVVKCoqwtDQ
      EKxWKx566CEwxnDnnXfizJkz2LNnD/Ly8rB7924EAgFYLBbU19fj0qVL2L59OxRFQUtLC+x2
      O957770F3wY23IXIricgH/wtbfxJkrX3ACaTCVu3boXX6wVjDGVlZRgYGMArr7wCWZYRCoVg
      NpsRCoUQjUZhtX7/OeKZvq7X68WDDz6IzZs348CBA9i4cSOcTickSUI0Orb6saysDE8++SRC
      ofmvseFMQ+zMO5C/+B0gB+f970n8TM8///zzoodIBlVVcfLkSbS1taGiogIOhwMejwc+nw8H
      DhyA2+3GunXrsHfvXtx1111YsWIF3G43ioqKUFhYiNzcXCxfvhx2ux2VlZWwWCwoKytDfn4+
      Vq9ejYMHD8JqtaKkpATFxcUoLCxEQUEBPvvsM9TW1sJiseD48eMoKSlBXl5e3HPzaADSoRcQ
      a/wjEOdS4nR1WFqFIZYreoxZ0esAaUQbaIO0/zdgA2dFj5IQ6fg6wFRZewiUSThniDU3QD78
      74AqiR5HVygAwbgqQ/7s3xA78xeAa6LH0Z2sfRZoJpxzdHR04M0330RbWxs45zhx4gR27tyJ
      QCBw7XOam5vxxhtvoLe3F6qq4qOPPsLnn38OxhiOHj2KpqYmMMbQ1NSEhR5FciUE6dN/Rayl
      gTZ+QXR3D6BpGrq7u7Flyxbs2LEDTzzxBI4dO4bHH38cmja2EUajUQwPD6O+vh7PPvssNmzY
      AJfLhbNnzyIYDKK7uxuKokDTNAwMDCxoDhbxQ9r7NLSLRxN588g86fJBcDQaxeuvvw6DwQDG
      GAKBAFRVxaZNm7Bu3ToAwMjICF599VXU1NTg5MmT2L59O3p6enDkyBEAgKIosNvtiEQi8Hq9
      2LZtG4xxnvqDha4i+v6vwa60JO02poNMeBCsu0MgTdPw4osvoqamBtu2bYPP50NtbS22bt2K
      xsZGyLKMaDSK5557DvX19aivr4fP54Pf78fAwACqqqrwyCOPoKioCMuWLcMtt9wCv98PVZ17
      eQLnHJq/HZHdT2T9xp8pdBdALBaDJEno6OjAO++8g3vvvRddXV3Yt28ftmzZgtdeew2dnZ2w
      2+1obGzE/v378eijj+Lw4cPo6+vD5s2b4fP5UFBQgPvuuw89PT3XnvefC7tyBtG//D34cFfy
      byiJiy4PgUTQhjoRfffvwIN9okdJGToEIgAAFh6EtOcfdbXxZwoKIMlYdBjSB/8ENtQhehQy
      DQogibgSGXuqs+9r0aOQGVAAScJVBdKhF6B1fyV6FDIL3b0QlgqcM8hHfg/1zLuiRyFzoHuA
      JFBb30Os6Q3RY5A4UAAJpvnbIX/xnwBnokchcaAAEoirMqSPn6G3L2YQCiBBONMg//V3YP3N
      okch80ABJIh6bj9ip94SPQaZJwogAVjgIuQvXqI1/RmIAlgkzjRE9/8GPHRF9ChkASiAReCc
      Q/12Dxi90puxKIBF4BE/5KN/ED0GWQQKYIE4Z1Aa/0grPDMcBbBArL8ZsZZ3RI9BFokCWACu
      KZC/fBmIRUSPQhaJAlgAtW0vtJ7joscgCUABzBOXRiB/9QoAeidpNqAA5inW+j498M0iFMA8
      cDkI5Rta7pBNKIB5iLXtBw9cFD0GSSAKIE5claGcfE30GCTBKIA4qR2HwEdo759tKIA4cFWC
      cvJPAJ1DLOtQAHHQ+k6BXTkjegySBBTAHDhjUL5+k/b+WYoCmAMPXYbWS8udsxUFMAe16wgg
      j4gegyQJBTALzjnUtr2ixyBJRAHMgg13QaOzPGQ1CmAGY3v/jzL+YtVkdhTATLgG9cJB0VOQ
      JKMAZsAGL4ANnhM9BkkyCmAGasch0SOQFKAApsGZBq2vSfQYJAUogGlweRTM3y56DJICFMA0
      2FA7nelNJyiAaWiXTogegaQIBTANuqidflAAU3BphJY+6wgFMIU20AYuBUWPQVKEApiCBXro
      PP86QgFMwfznRY9AUogCmIRzDkanPdEVCmAKCkBfKIDJuEanPdQZCmASPtILaIroMUgKUQCT
      sEC36BFIilEAk7BhCkBvKIBJWPiq6BFIilEAk8Xo/b96QwFMwuWQ6BFIilEAk9EZIHSHApiE
      0yGQ7lAA4zjTwOmyp7pDAUzgGqDSi2B6QwFMYIxeBdYhs+gB0gfT/fsAJi6BwGEAH//IYESY
      2RHmdoSYA0HuwihzIsztCDMHguN/DjEHAMN3vl6P5kv5bZgvCmCC0QyYHaKnSArOAZlbIMGK
      CLND4laMcgckZsMod45vxGMbc4TbMMqcGGVORLgdYZ6dP5MJFMAEoxkGi130FLPSuAExboYC
      y9hHbkaUWxFkrvGN2okgc41vyGN75dD4hi1zKxiMULlx7CNMmLrH1iMKYJzBYARMyQ+A84lD
      C8O1jwq3jB9S2BFkLoS5HQHmRnTS3jjEHYhwG2RuhcStULgF0vhGTRaOAphkMfcAnAMStyLE
      HQgzO6LchjB3IMTsiPCxDTvEHeOHFjZEmA0h7kCU2xDJ8sOMdEYBTGbzIMZN1w4vFIztZUNs
      bO87dmjhwDBzIzp+/Dyxdw4xBzQYoY0fYkz8R9IbBTDJR7G7cGB46XcCULiFNuQsRgFMErZ4
      cVkbFD0GSSHatU2S47SJHoGkGAUwyTJvjugRSIpRAJP48l2iRyApRgFMstyXAwO9NqQrFMAU
      JQUe0SOQFKIApigppAD0hAKYxGAwoHiJW/QYJIUogCmW0iGQrlAAU5R6PbRGUkcogClWLs2D
      22kVPQZJEQpgilyXHeVFeaLHIClCAUzjppVe0SOQFKEApvGDlen/XlaSGBTANMqKcpHrooVx
      ekABTCPHaUNZUa7oMUgKUADTMBoNqCmnxwF6QAHMYG1NqegRSApQADNYsTQPSwtoWUS2owBm
      YDYZsf6m5aLHIElGAcxi/c1lsJjpR5TN6Lc7ixXFeagsWSJ6DJJEFMAsjEYDNtaViR6DJBEF
      MIc1N5TCabeIHoMkCQUwh8I8J65bViB6DJIkFMAcjAYD7l5TIXoMkiQUQBxuqynFyqW0RDob
      UQBxsJhNqF9/vegxSBJQAHH60c1l8OY5RY9BEowCiJPVYsKWDTeIHoMkGAUwD3QvkH0ogHnI
      dduxeTU9I5RNKIB5untNJfLd6X0xPRI/CmCe8j12/A09FsgaFMA8GQwG/OyOalSV0iK5bEAB
      LIDFbMJjP70ZZhP9+DId/QYX6NbqYty5aoXoMcgiUQALZDAY8MidN9LpUzIcBbAIxQVu/OLH
      N4oegywCBbBI999RTQvlMhgFsEhmkxH/8NBt8NAZpTMSBZAAlaVL8Kt76kSPQRaAAkiQTatX
      4qc/pGUSmYYCSBCT0Yi/vX8VlvvoYtuZhAJIIJfdil8/vBYOm1n0KCROFECCXbe8AL+8uxZG
      I11pLBNQAElwz5pKWjadISiAJLCYTdj281twa3Wx6FHIHCiAJLFZzPjnrXegprxQ9ChkFhRA
      EnmcNux4dB3K6WozaYsCSLKCHCeefmw9ivJdokch06AAUqDUm4OnH1sPF51jNO1QAClSWboE
      //LYeuQ4afl0OjFwzrnoIfTk7MVBvLTzCK4GIqJHIaAAhOgdCOL5Px3G1UBY9Ci6RwEIMhSM
      4j/e+hLfdg+KHkXXKACBAiEJ/7XrKL4+3y96FN2iAASTFRUvNxzDX5t7RI+iSxRAGtAYQ8Ph
      b7Hrs1YoqiZ6HF2hANIE5xxnLw7i97uP4bI/JHoc3aAA0sxQMIr//qAJX7X0gH4xyUcBpCFN
      Y/jgq/P48yenISt0SJRMFECa4pzj2+5BvPLucVwaGBU9TtaiANJcICRhz5dt2HPkHOQY3Rsk
      GgWQITovB/C/+07RawYJRgFkEI0xfNncg7cOtqBvkA6LEoECyECjERm7DrXi48Z2RGVV9DgZ
      yWI24p41lRRAJuvuD+CDr87j8KkuenwQJ4vZiNtuKMWDP7oe15cVUgCZjnMOfzCKPV+24dOm
      LgQjsuiR0pLHacWG2nL8fF01Sgo8MBjGTltDAWQJzjkGAhF83NiO/cfbKYRxOU4rfrK6Avfd
      Xg1fnvPahj+BAshCw6NRfNrUhU+bOnT7GoI3z4m7blmBu9dUwps38/uxKYAsd7r9Cr44fRFN
      5y5jcCS734WW57ajtrII962twg1lhXGdnY8C0AHOOcJSDK1dAzjS0oMTbX0YjSiix0oIj9OK
      G8u92FBbhtrKIuS4bN87zJkNBaBDgyMRnGzrQ0vnVZxuv4pgWAbLkM3AYAByXXbUlBdiVXUx
      fnh9CQpznQv/ehSAvnHOcWkgiNauAZxuv4r2vqG0Wo5tMACFuU5ULyvAD1Z6UVPuxYriXJiM
      iTmhCQVAruGcQ1Y0DAYjOHW+H91XRtA7GMRgIIKwFENEiiXtnsJoMMBuM8PjsGJJjgNLCzxY
      UZyH2kofivLdcNjM8zq0iRcFQOYkKSqCYRkjYQmX/SH0DY6ifyiEwZEIJEWFpKiISDFE5BgY
      4+B8LCZg7HKyBsPYtdRsVjNcdgtslrGPLrsFpb4cLPfmYGmBBzkuG/Lddtisqbu+AgVAEkqJ
      aVBiGqJKDJwDNosJdqs5pRv1fFAARNfo1IhE1ygAomsUANE1CoDoGgVAdI0CILpGARBdowCI
      rv0f68tHOzw+y58AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='72' name='Profit' width='104'>
      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
      5wYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Margin By Markets' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='70' name='Quantity' width='184'>
      iVBORw0KGgoAAAANSUhEUgAAALgAAABGCAYAAAB/q16uAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWu0lEQVR4nO2deVhb15XAf08bQmI1q8Abi8E2NnhfYzuO49ixY9eJM53JZNJ+aaeddrqk
      0z1t2knTpunka5O0ab9pk7bpOk3TpEmd2vGGbbyAjQEvmB3EjlgkgyQEWp705g8s1RgBYosN
      0e8/ePfdd3V0dN855557riBJkkSQIDMU2e0eQJAgU0lQwYPMaIIKHmRGE1TwIDOaoIIHmdEE
      FTzIjCao4EFmNIrRGhQVFb0f4wgSZEoQggs9QWYyQRMlyIwmqOBBZjRBBQ8yowkqeJAZTVDB
      g8xoggoeZEYzahz8TqPP6eSpQweo7Ojg0ZWreXTVmts9pCB3MJOm4P0uFwfLr3G0spw2sxmP
      JKGQydFFRrA5NZ1tmQtJDI+YrMfd0dicDl4vKeZ0XQ1Gmw1JktCoVGQnJfOvK1aTFhuLIAi3
      e5jj5o9Fhfyx+CILExL43q69aFSqEdtpVCq+u2sPixISfdeMtl6++PZbGG29PLl9B5tS06dk
      rJOi4HqTke8fO0yb2Tzo/6LHTXN3N38svsifSop46r77WTc/ZTIeeceSX6/nxVMnsDkdg/7f
      53RyvqGeC40N7FqUxSc33IVSLr9No/zgMGEFN9v7eeFkLm1mM/OiZ/GpjZvI0ulQyOT0OZ1c
      bWvlcGU5RU2NuDzuyRjzHUtZu4GX8gaUOyE8nP/YsIlVc+ciF2S0mHt4Nf8cxS1NHCy/hkMU
      +fyWrShkM9cNenTVmttuQk5Ywas6O2nqvk5UaChPbt/B3OhZvmsalYp181NYNz+FDqsVj+SZ
      6OPuWKwOO784d4ZehwNdRCTf270HXUSk7/qcqGievn83fywq5PVLxeTV1bAxNY218+bfvkF/
      AJiwguuNXYgeDwnhEcRotcO2SwgPH/K/fpeLvNoacqsrqb9uos/pBAZ+GGvmzueja9b5vW80
      jLZe/lBUyFl9HX1OJyqFgqwEHR9fv4HUmNgh7T2SxImaKt64VDzEf9iansH9i7OIVIeO+MxL
      Lc3UmYwo5XI+ueGuQcrtRSYI7F2azYXGBvQmI0cqy1k5Zy4KmYyKjna+dehdgCH2KjDidbO9
      nyMV5ZzV19HU041TFAGICg1lc9oCHlu9Bq0qZFB/Z/S1PHfsCLHaMF54cD82h5M/lRRR1NxI
      n9NJeIiafdk5PJyz3GdKPXfsCGf0tb4+Kjs6ePi1Vwf1e7M9feszYrVhvs/h/a69/T7HEd/f
      Xts+r66Gn57JI0wVwrMP7CU9Nm6ITGuNXXzz7wdwud08ff9uspOSB12fsIInR0UB0NzTTb3J
      xBJdUsD3vnTqxCCBeelzOjlVW01VZ8eQmXA0Kjra+c7hg1jsdt//nKLIpdZmvvK3v/KVe7YP
      8gNcbjc/zjvJiZqqQf14/YffXbyA2+MZ9VV7vqEBSZKYFz2LxYmJw7aLVIdy94IM9CYjdUYj
      3X024sLG/iP20ud08p3DB6ns6Bhyrae/nwPXrlJn7OK/d+4mLCRkSBuHKPKTvFOUtDThuSnv
      zuqw84eiQgAeWbFq3OObCDlJyczSaDDZbJyurfGr4JdbW7A67KTHxpESEzPk+oQVPC0mlhit
      FpPNxvO5x/jYug3clZqKQja6AyWTCWQnJbNvaQ6LE3VEqNWIHjcXGhr48emTGCxmXi8p5gtb
      tgYUdeiwWvnRyVwsdjuLE3U8sWUrsyOjsDjsvHz6FPn1el67UEBGfAKzNBpg4AeRX69HKZfz
      +Nr17FqUhUqhwCmKVHZ28G5ZKbJR7OQ+p5N264CDnRYbR3iIesT26bFxqBQKzPZ+Ws3mCSk4
      gFImZ1NqOruzlpAeG4dGpcIpihyqKOO1CwWUtRs4XFnOwznLh9xrddgpa2/joexl7FyUhS4i
      gu7+fp49+h4VHe2c1deye/ESItRqnty+gyfZEXAUxR+LEhJ58/FPBBRFCVUqWTF7LseqKihu
      aeJh+woi1P+QrV10UdTUCMDaefP9yn3CCp4UGcXH123gx3knMdp6eT73KC+fVrI+JZWdCxez
      OFGHbBjl/NLWe4c4WQqZnI2paRisFn59Pp9aYydWh2PQBxuOM/pa2sw9JIZH8OV77vWFJSPV
      oXxu8920WyzoTUYuNjWwY+FiYOD1bhddZMYnsD1zISrFgEhUCgXZSclkJyUjekb2HfpcToy9
      NgBiRzDTvIQqlShlcmxOB1aHfdT2o/X13J59Q2SsUij40JJs6k0mjlVVcK2tlX1Lc4bIO0ar
      5Ycf2j/IFJyl0bBnyVIqOtqx2h043eKExjheBEFgW0YmZ+pqae7uprzdMOjt29LTQ73JRHiI
      mrXDROcmxYW/Oz2DH+3bT3ZSMjJBoN/l4kR1FV898DaP/u41jlZWDHr9eRkpguAVeKACdooi
      Jc1NAKybnzIk5h6pDmXNDYeuqKkRbxq8TJAhCAJ6k5Hj1VWIfiI9kx3piNFqCVUqJ6UvQRCG
      nUAEQSA+LAwAi8Pus80HtUFALht6v/wOie5kxMeTER+P6PFwqraGm7cveM2TlJgYZt8wlW9l
      0hZ6UmNi+cGefZjt/eTV1vBeeRlNPd2Y7f28lHeC/Po6vnzP9iF2YOP16/zlSglXWlu43tfH
      ePdf9LmcdPX2AgNC8YfXRjP12eh3udCoVCzR6VgQG0d1Vye/OHeGXxXkMzc6mrtS09ictgBd
      RMSkL8qYbAPPnywkSaKs3cBfr16mvN0wyP+Y7qgVSrZlZFJqaKOsvQ2DxUxSZNSQCU2t8D9h
      TPpSfaQ6lL1Lstm7JBujrZffXDjPydpqCpsa+VvpFZ+zJkkSf75UzB+KCv3O7mNF9Hhw3Jih
      ns89xvO5x4Zta+y10edyolGpiFSH8uwDe/llQT65N2ZwvcmI3mTk90WFLEnU8ZVt24nVhg3b
      n0apIjZMi9HWi9FmG3Ws/S4XLo8blUIxqr0+Gi63m5dPnyK3pmrck8OdTlaizudslhraSIqM
      otVsRm8yEhWqYfXcecPeO6W5KLHaMJ7YshWb08GFxgYut7bwUM5yQpVKSg1tvHGpBAlYPz+V
      f1mxkpSYGJ9z6g0xBcpwr9pA0KpCeGLLVj6zaTMGs4XiliaOVJTT1NNNqaGNF0+d4Fs77h92
      ltCoVCSGR1LZ0UF1VwcWu31En6HM0IZTFIkLCyc5MvAIkT9O1VaTW1OFQibj3oyFPJi9jKTI
      SJ/Z4nUIpzO6iEifs3myppot6Qu40taCxW5n3fwUEkZIAZnyZCulXE56bBwXGhtwSx7fLFPe
      bsAuushOSuYr2+4dVnkCRaNSEasNo8Nq5YktW31O5FhQyOTMiY5mTnQ0+5bmcFZfxwsnc6kz
      dmEwW/yGobxsTkvnrN6/M3QzZns/BQ31AKTFxhKtGd0pHYlLLS1IksTd6Rl8dtOW9yXHResn
      3DhWFDIZIYrA1O9mZ7PW2EVVRweFjQ0IgsD6+Skj+kgT9iTO6uvQm4zDXne53dQauwCICFH7
      ohTuG5GJ8JAQQuRDP6hTHNuyfqhS6Vv8OFxRTq/DMWxbi93ui4zUdnUNyRvxsiAuHm2ICtHj
      wS6ObDNnJyWTHheH6PHwasE5DBbzkDYeSeJA6VXqr5tQK5TsyVo65MuRJGlMJptXjjFa7RDl
      liQJl3vy0yO8C3rtFivd/X3j6kMlVxCuHvihVLS3j9re62z2OZ28eeUSepORWG0Yy5Jnj3jf
      hBW88bqJz731Bl898DbnG+p9Do4kSbSZzfxP7lEKmxpRyuXck5Hp+0LnREcjCAIlLc3k1dXg
      kSREj5trhja+fejvvHgqd8xj2b5wEbM0Gqo6O/j6u+9Q2dHui4p4F3u+/u47PHPkkC+icKGx
      no/84bf87Ewezd3dvvYmm41XC85istmIDtWgixg5E1KjUvHxdRsJCwnBYDHzjb//jfMN9Yge
      N5Ik0dzTzdPvHeT1S8UA7M9ZNujLmaUZiKz0u1wcLCul3+XCI0m09PTwszN5PHXwwKDVPy9z
      o6MBOF5VSamhDUmScIoi5xvqeeLtv/CXK5fGLMfRiNWGoVGp6Onv47ULBZjt/cBATH2kieVm
      QpVK4sMGZHq8upJz9Xo8N37cJpttSGhWrVCydUEGAMXNTVjsdpYlzx7RN4JJMFEiQzUIwDVD
      G9cMbX7bKOVyHlu9dlAwf8XsuSxOSKSs3TDEKYxQq9mWkcmxqsoxjWVOVDSf3riZF07lojcZ
      +eI7b/ltl52U7JvtlAoFdlHkYPk1DpZf8zv2R1auIipUM+rzsxJ1fGHLPbx46gQdVivPHDnk
      t919Cxfx4eUrB824MVoty5PncLy6klO1NZyqrfFdkwkCC+Liqb9uGtLXPRmZnKipxmAx87UD
      bw+6lhQZyfr5KeTX60cd+1hYEBfPhvmpHK+uJL9eP6j/QFNfBUHgwewcSlqa6HU4ePboe75r
      3gUkxS0LSEt1Sb5FRYVMxsbUtFFNsgkr+ANZS1g1dy65VZWc0dfRbrXgFEUEQWCWRkNO8mz+
      KWcF82bNGnRfWEgIX7v3Pn59voD8Bj1OUSRGq2XnwsXsy86hpKV5zAoOsDE1jfS4eP6v+CIX
      mxro6R+YXbz52DsWLmblnDk+Z/bDy1awOS2dA6VXKWjQ09Xbi0eSRs1fGY4NKankJCfzztUr
      HK2qGJQPDv9Im92WsZClN6U1KGQyPn3XZlQKOcerq3CKIlGhoWxMSWP/suV09/X5clFuRhcR
      ybd37uLn585QZjDgljzoIiJ4KHs52zIyefNyyaQruEIm4zObtjAnOpoD165istkQBIFYrZbo
      ACYCL5nxCfxgzz5eLThHmcGAeCOyNCcq2q9dfbOzOSc6moXxCaM+I1j4533EaOvl2aOHqers
      IFSp5It3b2NjatrtHta04pX8s7xTeoWHc5bzsXUbRm1/ZyxXfUCI1Ybxzft2khmfQL/LxfMn
      jnGw/NqMjV9PNu1WC+cb6lErlKwaIfZ9M8EZPMi0wGzv9yXMrZ03n29s3xnQjqhpt+k4yAeL
      Wxf8ojUaPrJ6XcDb/YIKHmRaoJDJydLp+NTGTcyLnjX6DTcImihBZjRBJzPIjCao4EFmNEEF
      DzKjCSp4kBlNUMGDzGiCCh5kRhNU8CAzmqCCB5nRBBU8yIxmWi3VeySJa4Y23im9wtW2Vt8O
      l5Fq8AWCJEmcb6znTyVF6I1GPJI05j7N9n5eu1DA8apKHlmxatRSb2Z7P++Vl3Gipoo2sxmZ
      ICMlJoaPrlnH8uTZY95bORmyET1ucqur+GVBPnOio0asWiV6PHzvyCEKb1SWGo5Nqek8uX3H
      mD7LZDJtFFxvMvLCyVy/+z+9Nfjy6/W+dNRAcbndvJJ/lkMVZYPSVr19Xmxq5On7dzMnKtrv
      /f0uF29ducRbVy75ylaMhEMUefNyCW/e0t4juanp6uRbh94dc/3wicrGI0lcbGrk5+dO02G1
      BvTMPqeTLltvQG1vJ9NGwf9cUozeZESrCmHf0mx2LsoiRqtF9LgpbGzkJ6cHSsf97uKFEUs8
      3Mrx6koOVZQhAPtzlvPIytWEKBRcbGrkZ2fyMFjM/CTv5JDilTfPdsNtWvaH3mTk7dIrON1u
      luiSeHTlarJ0Osz9dl7JP8vZ+jqOVlWwau68gEsrj1c2kiRRZzTyUt6JETeO+6Pf5cJit6OQ
      yXhqxy7WBJif/X4zbRRcJhO4b+EiPrF+46BXrUImZ0NKKjang5fyTlLd2Unj9esBzeImm423
      rlxGkiS2ZSzkI2vW+bZKrZ03H5VcznePvEd5RzsFDXq2Zy7y3VvQUM+P804iEwQ2py1g1+Is
      fnjiOMYAZrWE8HAeX7uelbPn+kyRGK2Wz27egsFiptbYRV5tTcAKPl7ZmPpsPHPkEEZbL/Nm
      zeLj6zZwpKKccwFscbt+ozpYiEJJZAB1I28X00LB3R4Pj69ZT1xY2LC26eyoaEKVSiQCL7tQ
      ZzLSabUQHqJm79LsIfsAFyUmkhEfz9W2Vs7p69i64B9VAZQyOdszF/LY6rXEasMCUmwY2Aj8
      /N6H0PqxbcND1OgiIqk1dvnKQYzGRGQjIJAeF8dXt20nK1GHIAgcqwxsH6zR1kuf00msNmzE
      uvC3m2mh4HKZjPhRCuHrTUb6nE4i1OqAzZPLLc2IHg9JkZF+y0KoFUqWJc/malsrjd3XMff3
      +75M78kVY2WkQvo9/X0093QDBFySeCKyidFq+faOXQE951Zae3p8fUxWIdGpYEaECa+2tfLb
      wvMALE7UMSfav0N4K6YbdQTjw8KHjTB4C/xbHQ46ewNzwMaDQxR5Jf8cDTeKAnlrgEyU8cpm
      NJq6B36IkWo1IROsSjaVTIsZfDg8ksSh8mv86nw+DlFEFxHJJ9ZvDKjc8UAUYEBhR5otvUVu
      pppvHjxAebsBQRDYn7NsUEmJ8TAR2YyGUxTpuVHRqrCpkb2v/q/vWoRazcL4BO7NXMSGlNRh
      Szu/X0xbBe+wWnn59ElKWpqBgfLN39i+c0zHnXgJpGi92+OZkjJoHkniWFUF5e0GlHI5j65a
      w8M5yydUY3AyZTMcqmHqClrsdgqbGilsamSpLolv3nd/QIcXTBXTTsElSSK3popfnDuLzelA
      Jghsz1zEJzfcNW5bMJCSx3KZbNLPtTTaevlJ3imKW5pICA/nc5u3smL2nHH3NxWy8YdKoeDp
      nbuH/F/0uKk3mfht4XkutbZQamjjlwXnbutxidNKwV1uN7+/eIG3rg6E9hLCw/nMpi2Dwm2B
      olGpiNOGU0mH35p/XrzRgsk2U/QmI88cOUSn1YpMEPjpw/88rlVYL5Mpm/GikMlZEBfPM7v2
      8PLpUxypLKeouYkOq4XkSP8nMEz5mG7LU8eBJEm8camYt65eBgaWgD+/5e4JKYU3ItLZa8Xm
      dPjtyxstCA8JIX6Ch0V5MVjMPHv0MJ1WKxFqNf9197YJfY6pkM1EkAkCW9IXcLK2GqdbxGK3
      kzx51tHYxnJ7Hjt2Lre2+BZltqZn8OV77p3wF5idlIxCJqPNbMZgsQy5bhddXG5tAWBe9Cwi
      Q0c+KzMQvKkBBouZsJAQvrVj14QPg50K2UwUp9uNJ8BY/lQyLRRc9Hh4t6wUu+giNSaWT2zY
      OCn28IK4eOLDI7A67BwovTqkZG9FezvVnZ0IgsDG1LRJsSMrOtq50tqKIAg8vnY9WYm6CfU3
      VbIZiYqOdoqaG4ctOedyuzlRXYXo8RAVqpm0N994mBYmSnefjTrjQK7EmnnzRz11+FbevHKJ
      X5/PR6NSDTolOEarZX/OMn56Jo8TNVVEhYYOyUWxiy6yEnWsn586KZ+ltK0Vu+giRqtlxey5
      Ad/nPdHX6rDz6MrVvmzFicpmPBhtvTx37AiJ4RHsX7acdfNSfOeOtph7eDX/HMUtTb6TGW7n
      Sue0KPzj7/jnkbi5RrVddPH0ewe52tZKUmQUz+7eO+hMyOGyCb34O3e+z+nkqUMH/J4u7I+b
      U0ZvPQ57OG49ZNX7I1XK5Xxp6zY2py0AJiabsZzfc/Nx3LXGLp49+t6ImYeCILBtQSaf23z3
      lL9RRmJazOATobqzk+rOTtQKJZ+5a/Mg5YaBAvf/eddm1qek8pvCgnHng08lVoed0zcK4j+Q
      tTSgAvNTSXpsHL965DFf/vnNRxdqVCoy4xJ4ZOUqX37L7WRazODjRZIkXso7ybGqCh5ZsYp/
      W7Xmtgt8PJxvqOf7xw6TFhvHd3ft8XvmfBD/TAsnc7wYLGZKWprIStTxYPayaancosfD0aoK
      1Eol/75+Y1C5x8iMVvArba243O5prRgGi5mark4ezF424YjLB5EZbaIECfL/8W19tar+xmAA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='70' name='Revenue' width='188'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Revenue By Markets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3Rd1Zm3n3PP7U23qHdZxZLl3nHHGGyaCeBJIV8GSCgTZjJJvkmYSQIT
      UsjKJENmUsiXwKRNIIQ4gCkO1eCKe5GtbvXey9Xtp31/yAjbYKol2fJ51vLy0tW+591n67xn
      t99+X0HTNA0dnUsQQRAEw2RXQkdnMtEdQOeSRncAnUsa3QF0Lml0B9C5pNEdQOeSRncAnUsa
      3QF0Lml0B9C5pNEdQOeSRncAnUsa3QF0Lml0B9C5pNEdQOeSRncAnUsa3QF0LmmmlAPE4/EJ
      tReLxSbMlqIoSJI0YfYm8t4m055xQq2OM5qmMZEH3DRVnTh7p+5touxN6L1NkD1BEN62d8rW
      1HKAwUFGfvGzCbU5sX0ORCfQ1kTf23jac37tXgSP5x2ff3QHUOL0DwwSk1WsjgQ8LhuG0zwM
      AFVmJCLhtJuJRGTsdss5LxcaHkCzuHBYTSjxCHHVhN0qEgsFGAyEMdlcJLjtBPu7CEsCRoud
      RF8CBuGcl7xoUTWN/nCEgUgYsyiSlZCA0TA6Wu0cGSGmKGS7E4gpMl3BIHFFIdnhwGO1jr3l
      NE2jLxxmMBLFajSS5nLSEwoRisdJcTpxWywMRCIMRaNkuN1YjUYikkRrIECm243dZJrMJpgw
      ProDDLfy+p5KPHYLkYhE/oJllGZ6zywTHWLnoXo2rCzgyJEeVqwoGfvVSHslXcYcClMcAJRv
      20JbxlJuWlzCYGc59SM5LMhR2LXzIIrZhtnhYdaMWRzZ/iKKJws1GCBtwQbmZzs/8i1cqPSF
      wvz33n347TbqBwa4pqiIa4oKiSsK977yKkPRKE9s2sQzVVU0DA5iNBgYjsb4t5Ur8NltwKij
      /MfuPWQnJOCyWJiVkszTlVUkWK2E4nH+Zfky/vdYGa/V13Pf6tUsy87izdZW7n35VR6+7lqW
      ZmVOcitMDB9rCJRWtIAVJWnEh1vYdrSJ4swEhtobae0dITGzkHT722XlaIC6yuOEDU7yp+Ug
      Wr14LG+bdydmkTDSSlNoOm890u2traQWL6V0WhKapqJIMsk5syhetAiT3MauHc1I2aVMtXeV
      x2rhm6tWYDEa+WtFJRU9PazLn8YTx0+wIjubgx0dAGwsno7dZKI3FObfX3+d4VgUn92GrKo8
      fvwEeV4P+V4fWZ4E+kJhri0qYmVONt99YwcH29oBmJuWRlVvL0syM079n8nZHflU5uOvAgkC
      5gQP9nCE0GAzR2vaCQZHOFF2hOGwMlYsPtRDf0RloKOB1u5hAq0naRmOvH0Zg42Zi/NoOFRL
      TB39LBINY3e5EQQBg0FEAKRYmOHhQdprTkJSEuLHvoELD5MoYjAYeLK8gjcaG/nUzJm0Dg9z
      sr+fNXm5Y380p9lM/cAAP9i5izV5eWS43QAoqkrnSBCLaERSVf7fgYO0Dg9zvLubrmAQg0Eg
      FB9dUcpyu+kKBukLh4nJChlu1+Tc9CRxXibBajRC1Gom1N5Ma3c3PrsVnCkYUMfK2FMLWLKg
      hK6mWoLI73odk7uIZNNrtPWKYAez2YociwLWtyzR11pF5clqZN9s/v6G5Km1jnuKmKLwH7t2
      4zCb+eFVV5JgsfC9HTtoDQT4w7EyKnp6ebW+Hp/Nxh/Lyrh70UIWpKePzcEMgoDTbGZmSjLL
      srKoHxgg1elEDIf5Y9lxmoaGWJo5OsTx2+0E43HeaGxkms9Lw8DgZN76hPOxnp9ATytVVZXs
      3nUET1YGicmpeJx+8gqLyEnzY/wIVy8qyqGpoRUZSE9Nob78IMcrKymvrGQ4aiCtYAGbPvtZ
      lmdq1Lb0ISlTL65X/cAgJ7q7mZGUxImubhoHh7hn0SK+f8Vari8qItfrYUF6On+trKQ4KYlQ
      XOJgezuDkQj/9MJW9ra28YmS6fylvIJnqqppGhrCa7OS7HBQ6POR5XYzJy0VAJPBwKKMDJ6r
      rqHI75/kO594xAceeOCBj/ZNE0p4mJFQjKS8UkpykzE5/fgtcQaGgljcfpL8XtxOJ26nC5vN
      hsNhRTSZsNvs2F0unE4XNtPoIMZstWJ3OLA43PjsTvwpyXh9flISTPT2DmFxJ5OS6MbhsONw
      eUhKTUEOBrG5nBhPLQXJwSDKgf3nq20mDYMg4LZYkBSFkCzhtljI83rx2mz4bDbyvF6K/H5c
      Fgsmg4GwJKGoGpkJblKcTgr8Pgr9flKdLgKxGBsKC8hMSKBlaBiDwcBNpTNIdjjw2Wzkej0U
      +HykOp3MTE4m2ekgMyFhyq0CmZctR7Bax36WZZkHH3zwO8JUCo0Y7eoiPsH7ADoXB86v3Yvh
      tH2AaDSKzWYTppQDxMJhjENDE2cvHsdiNk+ILVVVUVUVo3Fi9i4n8t4mwp4hJRlBfLvt3nKA
      KbUTjCgipqdPmDlDNIp4Wrc6rigKmqIgTtBDOaH3Ngn2xuxOuEUdnQuIKdUDaMERQo/974TZ
      U1UVxfDx3yH22z6PIE7FHY0LnynlAEgySmPjhJpU3r/I+zN1pmEXHefdAULdzTz/wqtcdssX
      yLEJqCM1PPzHQ1y/6RPkJjs+2EWiwxyp62RWSTGmc7wYNSlA54BAaorrA4/jekIhfn3wEF3B
      IHaTiS8uWoTTbGJr7UlePHmShzasJyshARgVpL18so6ttbUomkZVby/fWrWKfL+PpyoqaRgc
      5AfrrsBhNvPlv73IUDTK/950I4Ig8Pujx3itvp4fr79q7Ho6FybnfQ6gqmbyilw0nexH01S6
      qtpImJaCoKrIkoSqaWiaiiTJqIpMPBohFAoRi8eJhsNEYhKqphKPRwmHQ0SicVQNVFkiEg4R
      DkdRRj8gJn249295dw+CIPBfV29gemIir9bXIwgCM1OScZrNKOrbO9cGQeDqokJ+cd21/Pua
      1eR7fcxMScZsEFmSlYmsqmgAmoZBELAZjTQPDRGMx+kPh/HZbGdcT+fCZFyGQJbkYrSuGoKR
      GdSEnRT7I0Cco9uPkrNiKW65n4OHOsjPN3NgbzkyEmG8JNplgqqDy1csINzbyOuNDUgazFqx
      geR4HW8eOokka0xbdhWznW1UNHvJy3ynxvtcTE/087faWv577166gyE+P38eiXY7NpNpTG58
      Npqm8UZjI6UpSSQ7HIgGAwicIf02Ggwsy85iT0srizMz8NltdAWDH7cZdSaAcVkFEkQbLpeB
      rvZ+HN4EzOeSF4o28ucu5+ZN68lKzuPKa25g9jQ3alzBljiNq2+4kQ1rZjLU0oUkxZHiMUYG
      Wqls6vtI9WoeGsYiGrm6sJBUp5Py7h7eb/TdEwqxt7WNG4qL33ne4TSKE5NoHh6irKub4sTE
      9yyrc+EwTsugBjLcNk621GD3ZL0tr9Vk4rJCoLuVgRiAgMlkQhANmExmTKIBg8HA2KOjyQx0
      tKLYnfR39TLnypu4duUcLB9xwaQ7GEQToNDvJ9Fhpy0QODUkG3UDjVEl5R+PlbG3tRVN09jV
      3EyOJ4E87+hZh9OPJWqaNuZALrMZi2jkYHs7xYmJH62COhPOeR8CmWw2fKKIx+sjpVsgO8vB
      MGnYbQ6S52TwwtZnsSVnk5+bgt1hRzCbAJGUlNHJotuThNVuJ0Ht4em/VODLm8cVlyUTbM9i
      +6vP4MvIIicjAcFsJjvF/t6VOYurCwuJyjL/+sqr5Pt83L1oIbubW3imqgqL0ch/793HNUWF
      CIKAcMoNQ3GJm0pmYBAEFFXlL+UVvNnailkU+f6OnXxh/jwuy8rEZ7exMieH5qEh/HY7SzIz
      cVrOfQJO58JgSkkhLlYtkOuB7yK8j8RBURQURcE8QTvB0WgU6wTuzE6GvSknhRDsdixXXzNh
      9mRJwng+VJPnYTNN56MxpRwAiwXL8hUTZk6LRrFMgn5F5/yhv3p0LmmmVg8QjRJ7c8+EmVNk
      mdj7jN3FvGkYc3MnpkI6H5op5QBaJEJ822sTavP99qIt667UHeAC5n0dQIv3sXvnCaYtWkVG
      gkiwv4khNY3MpI++xCfHYrR1dJCZl3dWBcLU1fSROz37fSumaSEaagfImZ51zrKKqvJSXT2v
      1deT6/Fw04wSnjhRTsvQEKoGLouZb61aifvUOH4gEuGPx8poGR7ms3Nmk+V284Odu5AUBUXT
      KElK4saSYn62bz+XZWVxY0kxiqbxq4OHEIB/XLL4I7eJzuTwPnMAjaHGZiJOGz3to7FoYuFB
      AqF3j+rwQdEUhaGBAd6plJEY6B1+l8/f7SIS/X3D59zJ1TSNl+rqKOvq4ntr13LL7FkkOxzc
      u2I5v7juWv7PnFnEFQXLaUOYPxw9htti4YuLFvHIwcPIqsp/Xb2Bn15zNYszMjAaDCiqSlsg
      wP62NgKxGB0jI1T39tI4eGlFU5gqvOeLVlMVWofjlKSlcLJrEI0sNDlC9cHXOLJzmMQZK9mw
      0Mmrf93LsDSC4ErEqYXoHYI1m27E0VfJ7n1lRK1pLFu5FK/Uxes79tIf1PBmFVMw0sveHdto
      HlTJm7uK5bNc9DUe5enW4xg9eVx1xUIGK/ayu7wZa1Iuq1dchiXYzK49B+mLxHClLGTeOequ
      aBqHOzrpC4X45rZtZLpc3LlwARajkags81JdPdcUFWI+pcOPKwqNg4PcsWAB03xevDYrDYOD
      pLlc9Icj7G1t5VurV2EQBBwmM367jeahYdpGApQkJ9E6NHy+/zY6E8B79gCqHCMYieNJScE6
      MMCgCghGUooW8ZnPbMAYCgISBmc21950ExlukdJlV3PzUg+t/WGObt9NZ1gl0HKcQzVNVNe0
      MnftjXxm00YyEsAgGrHa7RiFKNUHyxkBEtJL2Ph3n2R5UoCqXhWz3YrVZKK39SSNbb00NLYy
      Y/UNfPbT15NmO3fdNU1DVhSumz6d/1x/FRFZ5mhnFwAnursJRKMsz84+I5amomkYDQIGYfSf
      rIz2RXvb2shK8IwFnhIEmOb1UdPXR9tw4JIMJzJVeM8eIDZQRVlZDSebm9FCg8QbFjHLYsLr
      SUA0xbCeentanG5sJgM2tw+31YTJbAYUjO5cNqxZRapFJhJXqD7ej8UsoiohJBl6ehoRPLO5
      cZGZPS9VIANGkxlRgLiiIcZ7ONEqcOUNn6C1fD8RWUZBwGwyoslx3ksNLRoM5Pt8VPb2sjw7
      C4FRBaeqaTxbVc1104uwGY2EJYn9bW3MS0sjw+WioqcXj83GYCRKjsfDQCTC6w0N3LN4EeJp
      Arciv5+nK6twWy0k2T/gOQedC473cACN4a4Il3/udoq9JtRIO28ebkXJN2M2GAARq9UMGLFa
      TYCA2WLGYBAQjFasoovcYjfbn92MZnEy87I1FGU4eHnLXxCsPlKzs0lwOig/sJsX2n24TE4M
      GBjpKGPzE+W4UqdzxVw/DW3lPPvXZ0lI8ZPntZJidbFj65PgTCAxqfictRcYjZ3560OH+frL
      rzDN52NuagrdwSCSojI3LQ1BEAjG4jxx/ARZ7gRuLp3Bbw4fYVtDI1cVTCMzwc2elhayExLI
      9/kQBAGjwUCS3UHaqXhEWW43bosFv/3D6ZJ0Lgx0LdA4Y1l3JZY1l3/s6+haoPNvb8ppgTCZ
      ME6fPmHmFEVFFN97Ic2gzw8uaKaUAwhOJ/bP3Tph9ib6raVz/tG1QDqXNFOqB0CWkbs6x9WE
      IBoRMy+N7CmXAlPKAbSREcKPPjKuNgS3G9e9/zauNnQmjnF0AJnW2hpMKQWkJFiIDXUwbEgi
      xT3+YbejssyOxiZcFguLMzMA2NXcTHsgQKHfz+KMjLENsKbBIQ60tyEpKoszM8j3+TjU3k5V
      bx8ao5EkpvsTea2hnpKkJGa73aiqyksvvYQoiqxfv37c70dn/BjHOUCMxvJKDlfWoGoaoc5a
      6vsmJhny4Y4Oniwv56nKSuKKwjNVVRxq7yDPc+pg+2ll6wYGSLTbSbTbeXj/AbqCQZ6trsFp
      NlOanESay0VPKMgfjx3nmcoqYopCT08Pv/3tb3n++ecn5H50xo9xHQI5/RkYIh20jpTyVuap
      wfYq9h6sJG5JYdWaJXgtKhV7t1PTHcaTM4u1sxI5frya9tY2rBmzuGxuLu1t7WRm5SLGOmkY
      cJLujRIeCFNW187CJYvxOd9eG49IEq/U1XNlQT6HOzoJxGK8UlfPNK+X1xoaRg+9n1bHdfnT
      UFSVQx0do7m5EBiORlmSmUlmwqj0oaavj3SXCxWN7mCQ1mPHmDlzJuFweDybT2cCGN9VINHK
      3KUzqDt8nMgp2YJoNI+mUpKaOVg/zGDlPrpcM1i/aj6BoT6QR+gaNrP8qqvxxzuoa+mkrb2d
      uKIhR3pp6QoSDrTx5u5qShcsxGN/e0ilaBrPVtcwIzmJAp8PGBW5RWWZT5QUs6l0Bv/vwCFG
      4m+nZO4aCfL9HTv53ZFjLMnMwGo04jSb+cHOnXzhmWd5tb4eRR2N/pbv81HT3UNtbS3z5p1L
      hqdzMTHuk2CDPYtU20naekKQC51N9UjmVLxuG3WhMAEJ8henY4/3jUZdA+weH267nSSvj15N
      Gg0eq2kokjQqlTZYKZw3nwzPmWvwwXicl06eBCAqKzQMDrA0MxO3xYIoGEhz2rGZRhNCS4qC
      22IhwWrhvtWr6A2H+e4b25memMi/X74GiyhyuKOTPxw7xh3z5wNQ4PWxt60Ne9F0EvXYP1OC
      CVgFEiicnsuzz7xCZi4YkOlpbyUqRNBskJSXwPPPPEe1TaNLSwKgr+4of+sqJ46VpZctRmqv
      4Y3XXsIg9UNmOhgMWEzvrHqCxcLvb7oRGJ0HPHGinGuLCklzOXnozTfx22ykOZ2EJIkvb32R
      H62/kt3NLfSFw8QVBb/djt1k5qd79wHQMTLCumnTxs4MTPN5+WNFBZf7/dhs7yFF1bloGEct
      kEo8KmO0mjFoCqFgCKPViahFGQlGMZrNGExWDIE2jtS2ocYjDJlSuG6+l+1HA8wpTsNsc+Kw
      mZBjYYLhOKLZhMlkxWzUUFUDprNCR5+uBYrJMmFJwmO1ogG9oRCyquK12TCLIgORCF6rlbAk
      MRIbHRJ5bFbsJhODkQhhSUI0GEh2ONA0jUAshtdmY9hkIvHr/4rJZGJgYIDU1NTxab6z0LVA
      59/eOGuBDJitp/5YgojD5T71uR2v723lZNxqx2m1Ijs8FE8rBLPCzBIfPt/bEmOT1YHXeqbk
      +F3zSQgCnIrTYzGZsJx6SwtAylkPTvKpqG0JVisJZ+WG9pvNnK3g8Z/64/jdbhyO0bp4PB88
      MK/OhcmUUoPGYjEsExiOcCLfWnoPcP7t2Ww2QdcC6VzS6A6gc0kztbRAQ4MEfvnwx76OeclS
      rNdcex5qpHOh8+EdQFMJjQwTikoIBiNOdwJWs8jHTQehKaPnhm1WCx81t4SmQSQapTcURtFG
      V3wSLBZiskJ3aDRji99mx2E2jWmBYrJMbyiMqmmkOB0IgkBbRwfmujoAnE4nHo+Hrq4uEhIS
      xia+nZ2dyLJMdnb2x7xzncnkwzuAHOTg7h2EsaAqEpbEfNYsKcX0MQdT0kgXeyp7WHfZ/I98
      DVXT2NXcwrGuLhRVpS8c5v8uu4wXT9bRMTJCTJYRgAfWXo7xlAP8pbyCyt5ewpLE3NRUNhQW
      sGXPmwi9fZSXl+N2u7nzzju588472bhxI9/61rcIhULcddddpKWl8eijj368G9eZVD7SEMiS
      lM+K+aXII50crO5BUVWife00dQ/hTc0lPdHBQGcLgyNhopqD6UXZGKQgLY3NhBUjiRk5JNkk
      GhtbCcsGMvIKxrRCSEG6QgKpXgcjw/0YzE7keBQtOkyfZMNnN+B0eTAZY/T1yPhT3GMTGYMg
      sDo3h7XT8ugKBvnx7j3EFIWbZpTgtlio6evjh7t2IykKRoOBiCRxsL2dr61Yjt1k4luvbWPt
      tDz+76abkVev4d577+Xv//7vsVqtFBcXEwwG6enpoaGhgZKSkvPyB9CZXD7SezvcdpzHH/sj
      z75Rhj8tGyHYw/GaOoYDw9QeP0jXiMKxPW/QFQjTU3mYppBE/ZE3aeiLEuhooqK5AzUSpG9w
      iOGBHspP1BJ/azF2pIODNaNR6FoaK+nqHebkiTfZe6iOiCRRXV1BICShab0cO9hyRmxOgdFe
      4Ps7dvLt199gSWYmGW43HquVE13d/OrgIa4tKsJ6amfXaDBgEASqe/uISBICAqG4BEBFRQXR
      aJT58+cjCKOpnLKysmhsbKSiooK5c+eODaN0Ll4+Ug9gz5zNZ+eXIo90s7+iAXdYoLGhCZvT
      jdHhA1khMbOYokULkWxxmuVhhqRMrlhVynBTFRVBheBgP719PcSjMlFDlFkF586nqwhulqxZ
      jM8Gb3bWvWfdbCYT316zmtZAgO+8sZ3ZqSn0BEP877EyvrpsKbNTUsYeXJMo8uXLlvJUZRUH
      2toYicewm01IssSzzz7LTTfdhOm0BBjFxcUcPnyYaDRKSUkJZWVlH6X5dC4gPpIDyKEB6uvq
      0aQRQnEFhycJT2Ia+YX5CGjvksTOSYJyhP0nREz9bUQSshkZDuPPzMdjlKlt6H27qMmCFmim
      plam+mQ7M5dMx2S3YxENgIZdkGlqrKNDamKQ3DOsxBWFl0/WYRJFNDSsRiMxSebx48dZlz+N
      UFziaGcXyQ4H39+xk39buYLeUIiF6enU9vfhtdlId7k4fvwEw8PDrFix4oy3fFFREZs3b2b+
      /PnY9ThAUwLxgQceeOBDfUMQEOUwXX2DRBUjxTNKSUpKxG+Fzq5+BJuHlCQvdrsVh8OB0WTB
      ZnfhsgkM9vQSGA5h8qcyszCdoe4eJLOPwvx0PAlenA4nLm8Sbi1I91CM7MIi0hN9uJx2HA47
      BtFAgstGf28/ojeDwsxUEhJsYytQSiiEeuAADYODBOMS104votDvw20Z1fwMRaNEZJkivx+P
      zUqBz0dIkmgcHCTF6eITJcVYRJGwz8/CTX9HTk4OACaTiYyMDEpKSkhKSmLu3LmkpaWRnJxM
      VlbW+f2LnIO3slOK76oBOf/IsozxfXIfXOz2Hnzwwe9MkBRCpqVsL3vKm7AlFbJq5UJ8tvN/
      s+crMJb5smVYr73u/e3pUoiL2p7NZhOmlhYoHEbs7//Y1zE4nRhO5QV+L3QHuLjtTb3IcKKI
      cYKGJDpTA10LpHNJM6V6AC0YJPTEnz7WNQSTEftnP3eeaqRzoTOlHABJQqk7+fGucT4SX+tc
      NIy/A4zU8NvH9mB0mBBtftZuuBLPwDHqbIuYlfzRL6sOV/PGSTdXLEx/+zNNY09LC1uqqolI
      Mvl+L3fMn0/7yAhPnignKst8d+3lmE5bSmwPBPjjsTLaAgFmpqTwmXlzeeyXv+To0aNEIhFu
      vfVWsrOz+eIXv8iNN97IPffcQzwe5+677yYxMZGf/OQnH6d1dCaZ8XcAVaJo+Y0sn5XAcNV2
      KvoV5ilRojGJWExFNJowGgQURUZWRn8WDQKqIqMoKggiJpMRTVOQJRlNMGAyGUGLE4mdlSJG
      gFyPh29fvgZFVfnGa9voCgYxAHNSU9nR1PSOpHpPV1aR7nZxz5LFKKqK0WBg9uzZ3HrrrZw4
      cYJHHnmEe+65B7/fT1NTE4FAgI6ODqxWKwaDPoW62JmQIVDTiTeJ95mJxSwsWGNEbYlTduBF
      GrRhjJnz2TgngW3b9zEUkbAlTWPNggIO7t3O0IhCVBFYtPY6EqO17NpfTVwxULRqPbPfJSuR
      AYEku4PNlRVU9vRSmpREVkICVqORkXgcw1naHU3TONbVRYLFwuH2TuxmE/euvZzly5dTWVnJ
      I488wnXXXYfNZsPhcJCamkpDQwNlZWUsXryY2traiWg+nXFkQl5hvvRpFBYWketX6RqIIYgm
      Ziy9ik03rifRAj31bSTNXcknP/Up8pxR+gaC2JPyue6mv+P6dbMZaOlEVhQ0VSE83EZV47nX
      +kWDwML0dFbl5lDb309vKPSedXOazXx61iz+c8NVmEWR2r4+XnrpJf7rv/6LTZs2sXHjxrE3
      fUFBAcePH2dgYIC8vLzz2kY6k8OEOIDbn0pWZhZpXoHegSiCYMBitSIaDIgGA1abwNBgEFWV
      CARDGE2jB1YEFIa62lGsTvo6u5l91U1cv2ouZvHd9+4kVeVETw8ZbjfLsrKInjrscjYDkQi/
      PHCA3lCYQr+fN1taGInFGYhEQFb4/e9/zz//8z9zzTXXnLE9P336dI4ePYooirhcrndcV+fi
      Y/yHQGYPXcee53+PCdgT87nqCg/icDJ+M2CwkOxPwJc7jYz9O/jzn/YxfcmVZCSaqDp8gicr
      yknKn8sVlyURbM/kjZefxp+eSWaGG8FkIjPpTEGaQRAIxeJ8543tyKrKDcXFFPp9PHLoMGVd
      Xaiaxr2vvMpdCxYQkxVUTePz8+fx5IlyvrdjB5tKZ1CQ6McXDPPTn/4UgIULF7J+/XqWLVtG
      bm4us2bNorS0lJSUFObMmTPuzaczvlyYUohYgLL6LmZML8L0IbRf50ULZDLh/vZ3Ppg9XQpx
      Udu7cKUQFjdzZrjfv9xZCDYbliuv+ni2J0htqXNhcGE6wEfFasWyes1k10LnIkJfyNa5pJla
      PUA0Smz/vvctZl6xEkHfxNJhijmAFokQf+Xl9y1nXr4cvfPTgcl6CpQYLc1NRGUNOdrL8eNN
      SO+zFtXdWMuw9PbPmqahato7pA2SovDSyTp+uGs3EUmiPxzmBzt38U8vbOUfX9jK/dteJxqL
      n/GdQCDAN77xDTZv3oymaXR3d/Pggw9y9913s3v3btrb2/nKV77C1q1b0TQNWZb50Y9+xG9+
      85vz0x46k8bkOICqMDDYTzwWpGzfERJyszG9T4SRkf6esTRLAETaOXqiYzRjzGlU9vbSGw5x
      vLsbSVHx2+18c9VKfnHdtdxUUkJMljGfpvhUFIUtW7bQ1NREZWUlsViM73znOyxfvpyf//zn
      FBQUMDQ0RHNzM9u3bycYDNLS0sKJEyeor68/b02iMzlM2hBIioxQW3ECOXEG2TyS39MAAB9b
      SURBVG4Dof4m9uzcR2/MwsylK5mdaefQjleo6YxSuHA1jmAPx156itCIwuKrrmG6PUpEc3H2
      ouWc1FRSHE5eb2g84/OIJLOtsYGriwrP0ATV1NRQVVXF1VdfTXNzM4ODg9TW1vLXv/6VP/zh
      D9xxxx14PB7cbjdOp5O2traxuEDd3d0T0FI648mkOUAs0E9X0MC0ucUIQGt1OamLr+NyT4Dt
      b1TTHlUJpCzhU2uSUWWVuj47pctWkh+vYt9QnOmWMEPBD5YLQNM0jnR2ICkqSzMzeSuMhKqq
      bNmyhXXr1jE0NASAJEkkJiby7//+74yMjPDggw9yxx13IAgC+fn5VFZW0trayowZM3QHmAJM
      mgM4U3JZtySHE0eO0Zm6Gk0F0SgiGESMaKiagMlsxiAABgGz1YnL7cAcsGCIfLiRm6JpPFdd
      w8bi6ViNRsKhMAePHCE3N5f29nYee+wxWlpaCAaDLFq0CIPBMBYMFxiLDVRaWsqTTz5JYmIi
      3g9waF7nwmeSHEDAZDJjsvtZNCeHA8erKJ5WyP4dz3BUNlIwfyWZeXaat73KE/tlChauInnM
      GUyYjQYQTNjMZw6AFE3j+ZoaXqiupXFwkHtfeYU7Fy4g0W5HVTVmJicjCAIDg4P86le/4vvf
      /z4PPzwaTv1vf/sbtbW1XHXVVYiiyM9+9jMkSeK2227D5/Ph9XrJzs4mHo+Tk5OD0+nE7f7w
      u9U6FxYXphboI/JBtUCu73wXQfz4vq9rgS5uexeuFuijYjIh5hd8gIJ6UFudUaaUAwhOJ47b
      Pz/Z1dC5iNC3Q3UuaaZUD6AFAgT/fGZcIPvnbsWg5/PVOQdTygFQFNSz1+YV5d3L6ugwLg6g
      MdJRxcvbjxDRTOTPX0GSqQ+XM5/UVOf5sxIfpLkHsjO9Y+M4VdPY2dTEn06UIykKy7Oz+QdF
      4a21hcbGRn74wx8yMjLCtGnT+PrXv87PfvYzmpqaCIVCtLS08Oijj3LPPfeQnZ3Nr371KywW
      C9/4xjc4fPgwL7zwgp4XYIpx3h1AkwIcq+ph5fWfJMluICaptLV0EwkO0dMTwZ7gxWE2EB4Z
      IhTTcLgTcIgKI5E48WgEwewgwWUlHo0QjUSQNSMenwdBijAcCKIKZhK8bkyaBsKZ+wBRWWZr
      7Um+snQJPrudb7zyGhsHB5mWPBqB6+WXX2bmzJncfvvtPPDAAxw5coT77rsPgOeee44DBw6Q
      mZlJYmIiHo+HpqYmvF4vqqrqUSCmKOfdAZRQgJgzkRTX6Hq1TQSiQ5yobcNkldASZrFmrpVD
      +2qJqhKaJ48N+QrP7WzC7xAJxmDV8oUc37eDmOhACQ6Ss/xGstUmjpa3IMdjJM+7nLmuNsqb
      vORmnJlaSVJVBqNRshIScJhNDAeDY79raGjgiiuuwOl0kpubS0NDA2vWrCEcDvP888/zD//w
      D1gsFkRRZNasWVRWVuL3+ykoKNDTIU1RzrsDiCYTmiSjctoSk9XL/MsWkpGucXB3E30nqzhU
      N0iiA7QRG5H8JDJnLGZlcSK15fvRJBVnWgErZs9G6jvGyaBMVA0wNNhPKNBLv3cmc2e907bN
      ZOKexYt49NBh/lJeQcvwMJbTlJ82m41oNIqmaUSjUXw+HwAHDhzA7XZTWlo6VjY/P599+/aR
      mJio5wObwpx3BxBsXjK0o+yrTqYkyURYMYIgYBQNCIKGIIAlwU9haSGr5qYTHoki0o8oGjEI
      AgaDAQEQRBGDQTgVHwiG+oeYsXID7t7D7Iu8+0aWpmmIgsCXL1tK48Agz9VUk+h28/DDD1NU
      VMSCBQt44403yMvLo6qqiuuvv55QKMTzzz/PjTfeiNVqJRaLAZCamkooFCIajbJmzZrz3Uw6
      FwjnfxJssFCybA3Hdm9nZ51I8fzF+L3JWCyjb+K0zGS8mcUU9u1k+xv1JObNJCU/kUxGlZ3e
      xDRsdjtpWiKiAGZHMilGEw7XNPYd2IMnNY2iTC+CxUZ+hu1M2wIMhCO8VFeH22Lh3hUr8Nhs
      pKWl4fF4WLVqFbIss3nzZr7whS9QVFREV1cXCxcuZOnSpQiCgCiK3HDDDaSnp7N+/XoikQhp
      aWmsX79+QnNY6UwMU14L5Pzqv2Dw+8fHnq4FuqjtTTktkOBwYL1p05mfOd8liq6OzimmlANg
      NmOeP3+ya6FzEaFrgXQuaaZUD6BFIkRfe3XsZzE/H1NxySTWSOdCZ0o5ANEo8b1vjv1oNhp1
      B9B5Tz7wEEhTVeorKoie+rnuxD76I+cuH+1upq438CGrE6K6vBH5g9RHC1JT0XRG2Zii8Oih
      w/zTC1u55/kX+Nx//AcNDQ1nfE+WZe677z6+9a1vIUmjgYZ6e3u58847+e1vf0s8HudLX/oS
      P/jBD4jH42iaxqOPPsqXvvQlotEoOlOLD9UDjAwNjcXhCQz2Yn+PJ1WJhggYPqz4TSYwFHxH
      rJ93RZMZHgqeERjLIorcuXABAA2Dg/xHc+vYwXYY3Sjbvn07XV1dyLKMqqrIssyWLVuQZZnW
      1lZUVaWtrY1YLEZHRwdut5sTJ04QCARQ1Q9UM52LiA/lAMHBDqorKrAA3cNxEsODHKhpZu68
      OcS6T1AfycEfLWfvsUbCIxFy195AbKCFN3buZSBmZuaSVaSIA7S2tdHcKbN0+QxqD+ykdUgl
      q3QFq+Z76G04wlOtxxHs6azfsIzhir3srmjB7Mtk9coVmIfr2LX3GEOxGK7URcx7l3pKisKz
      VdWsX78Bz2lnATo7O9m6dSuf+cxn+POf/wxAWVkZLS0tXHnllWOBrkwmEyUlJZSXl+P3+8nJ
      yeHkyY+ZflXnguRDrQIpcpxIJEIkEkFSVIxWB/Z4mN7wMI31QTKzVJo6RK66+dNsWn8ZbpvC
      yf17qOsLExvp4cjxKmKREENxO1deu5ZkhxWzxQJqmNojlYwA3sxSPvHJT7E2W6KmV8VoNWMy
      CPS21tPc0UtLey/z1t3E/7nlBtJs717PpqEhqvp62VA8HfFUvH9N03j55ZcpLCzEZrMhSRKR
      SIRnnnmG5cuXo2kasVhsbFhUWFhIbW0t9fX1lJTo84ipyofqARKScilauBA7cCTcCQYzJSVe
      Xnz9CI7cbGabVBRVwyAIxGJRFEFDERO4fONGSvxmguE4ob52cqel47aItHc0Y05exKeXG9nx
      t3IUwGA0YkBlJCxhlnuo6DBx/Sc/RdOxPYRlBVlREAQBJR4hdo4h2Esn61iVk4PHakWWZXbs
      2IHX6yUYDFJfX8+ePXs4fvw4W7ZsGS3/0kvU1dUxPDzMVVeNJtjIyspiz549jIyMMG/eu/Uz
      OlOBD+UAdpdrrMtwuDyYRRCd+XjECjxJC0FwMC1N4oXNT2C3e8ldnE/J4lL+9uIzHNVM5M1e
      RqHPikUc1QV5E5I4cWQXz7Un4nO6MCIS7a1k8xOV+HJmcnlGCrbOap5+8hn8GWnkJdpJdiex
      /eW/ojo8pKUVvyO+w0gsxnA0xg0lxcBo9Lf9+/dTWlrKl770JQBqa2vZvHkzt9xyy5i04PXX
      X6exsZGlS5fy4osvkpiYyPTp0wmHwyQlJZGbm6vnBZ6CfDwtkBzl2Juv0UkWq5bNwTHJi6pn
      a4HMK1dhXb9h/OzpWqCL2t7H1wKJFmavuIbZgoBwIYTasZgxnTZcETMyJrEyOhcDH88BBOEd
      2dcnE8HuwHrz3012NXQuIvRBrc4lzdSSQkgSUsPoWr4gihiLpk9yhXQudKaUA2jBIJHHHwNA
      sNtxffO+Sa6RzoXO+DqAFKZtIEJGsp94qI/OQcjOTBwNcz5OaJrG3tY2Dvf1UfDkk2zcuBGb
      bXTH7MUXXxw73G42m7nuuusQBIHnn3+eeDxOUlISN954I1u2bMHn83H99dcjiiLbt2+noaGB
      z33uc5hOO2Svc/EzvnMAKUxLZw+qFKS67Diy1TWucZk1YGdzM6/U13N5fj4FBQVjyS0A5s+f
      z80338zq1avZvXs3sixz8OBBNE3j5ptvZt26dZjNZp566imee+45+vr6CAaDPP3007z44otj
      u8Q6U4dxHwJpqkZHXRURTyGzkywMtpxgx54yYtY0rli/Em+wgR2VPfR3dJA88zJWF7s4dLCc
      1pZmbJlzWbWokJbmZnKnFSJGWqntc5PljxDsDXK4to1lK5eT6Bo9UC8pCq83NBKSJH578CBX
      LFvOrFlvx09JSUkhJSWFyspKioqKKCoq4sUXXyQ3N5fc3FxEUSQej+NwOMjOzqa6uhq/34/P
      5xuLFqEztRj3VaD++kNsO9JCUrIfATBaHaRn5ZCotXHg5BBqsIegI5+NG9ciDfeBHGJI8nDt
      J28h1zRAXUsH3T09SIqGEhuksy9MdKST/QeaWHb5mrGHH0ZDI4biEtcWFvLddVewY8cOjh49
      ekZ94vE4Tz/9NJs2bcJoNJKamsqrr77KHXfcwbe//W0CgVEJ9+zZsykvL6eyspI5c+ac0ZPo
      TB3G3QESCxdx87rZNFVXMSJptNefRPSmkZ3mJxqNIRgMpKRnYDWbsVlGH2ary43ZYMBhdyEI
      KpqmoWkq8UgUBUC0UjxvLom2M6tvNBhIdTnpj0QwGY0kJSURjUZpa2tjYGBgdH6wdy9JSUnM
      mDEDgKuvvpqf//zn/Od//icNDQ10dnYCkJmZSWdnJ01NTWRnZ493M+lMEhOyCuRIKWB26BBH
      jjeQalA4eeIoXksMLf3dy3dX72Nz/QFERxIrVhSidFTy4nPPYDaEMedkgcGAyXh2glQQDQb+
      rnQGP979Jrva2khYvoL8/Hy++93vsmTJEj75yU/y2GOPcffdd48FuX3qqaeoqKggGAxSUlJC
      xqndY5/Ph8ViYXBwkORTsUV1ph7jGxdI00bVoQYDoKIoGgZBQ5KV0QhwBhFR0FAZ/V9RNQyx
      dnaVx1gyJwuDaMQoGtBU5YzvjK4iCRjOWk6KdnUR+/lPiSsKitWK75v3YTKZiMfjGAwGjEYj
      sVgMs9k8JmyTJGns5JfVakUUxbEysiyjaRomkwlJkjCbzWcMhXQt0MVtb/zjAgkCovjWA2Pg
      rcBqlrMS1I2+y0+VtSQxq1jDYnl7bC+Ixnd8510xGDB4PFgBwWYbe1hOv9bZjWwymd6xtPlW
      mdMfttOvoTN1mFKR4WKx2IQ+qHoPcHHbs9lsgq4F0rmkmWIOoKHJHySmhI7OKFPKAbTBIeK7
      d012NXQuIiZcDBcLDdLdM4QiGEjwp+J1Wc6rPELVNDo6OhgYGKC4uPiMkOaSJNHY2Mjw8DCp
      qalkZmYiSRJ1dXVEIhEKCwtxOp1UVFRgtVrJz8/HYDDQ0tLC8PAwM2bMGDtkrzM1mHAH6Gyr
      pLo6hN0tcLyinhVXrMV/1tynu64Oe0EBro9w/SOHD/P8y69w8OBBnn766TPiAu3Zs4cnn3yS
      6dOnU1VVxb/+679SVlbGtm3bcLlcuN1u7rnnHr785S+TkZHBww8/jNVq5aGHHqK6uppnnnlG
      T5I3xZh4ObTFTen8WWRmumgu30VPf4DA4Em6ggqJ2YUki4Mc2LMHc08P04tm44wO0D/Ux1DM
      RMH06bgIUFNTT1A2UjhrLon2M9/ICxYsILdoOv/yL//yDtN1dXUsXLiQW265hfvvv5/Gxka2
      bt3KPffcQ2lpKf/4j/9IbW0tfr+f9PR0qqqq8Pv9OBwOcnNzJ6iBdCaSiZ8DqBJD/b10dzTR
      3BnF5RQJhyMoUpDDhysRrU4SXC58SUk4LCoNx4/SJ1sRw0M0dHSjxKJEJAk51sfxo42crc8U
      BOGcup3LLruMPXv2cNdddyGKIsXFxcRiMZxOJxaLBYvFwsjICIIgUFpaSk1NDTU1NRQXF+ta
      oCnKxDtAPERDTTnHq5rJnHMZqcZB2rqGCIVDDLd1IbuTSE1OJqewkCSXCbM7gzlzZ1CUl4fV
      LDHY183gYJBwOEJfV/c7HOC9eOGFF1i9ejWPPPIIRqORvXv3YjKZCIfDSJKEJEk4HKMJNfLy
      8mhoaKChoYGCgoLxaQudSWfih0BWD/OXzSEryw2ANNSJbEogLVGkp733VKF+yvYeZUbxWbl5
      NY1wLIbT7cNmiRAOn/VrNKprajna2ER7eztbt25l6dKl/OIXv2D+/PmkpaVRVlaGxWKhr6+P
      7Oxs1q5dy+OPP05qaiqpqakUFhYCkJycjKqqdHZ2kpaWNs6NojNZTPhOcDgcQBBs2Gyj8gNN
      lWmvryGgWnDY3KRnJaEEeqhv6cGfXYBNjuHwe9AiESKahp0Y9U3tCA4vHosNX6pvzIsjXZ3U
      Pvc8LWlpvHVb8+bNY2BgAK/XS1JSEkePHmVgYICsrCxmzZpFLBbj6NGjjIyMsHDhQjweD0eP
      HmXGjBl0dHQgSRJ5eXnU1tZSWlp6xiqQvhN8cduz2WzClJJCRLu6EKqrsKy5fGLs6Q5wUdub
      clIIISEB85Ilk10NnYuIKRUVAoMBQVdt6nwIplQPoKPzYZlSDqCNBIgfPjTZ1dC5iJhSDoCs
      oI2MTHYtdC4iJmUOEOqq4ZUdhwhKAp7cuVy/YsaH+n48GiIiCSS43qnLaWpqYvP3v8/OnTvZ
      vHnzGVqgP/zhD+zcuRNZlikvL+ehhx4iFArx1FNPIcsy8+bN47bbbmPTpk1kZ2fz8MMPYzab
      uf/++zl8+DBbtmzRtUBTjEnpAfqbTpK29Ho+8+lNLJ+ZBUqc8Kl0L/FYFFlRiMXixKMhhoMR
      lHiEocEBBoYCSIpEd1sDVbWNDAVCKGflrbPb7axdu/aMB/8tbr31Vn7zm9/w9a9/nblz5zJr
      1iy2bdvG7bffzk9+8hOOHj1KW1sbHo8Hh8NBc3Mzvb29xGIxMjMzJ6JpdCaYSekBEqcVcXTX
      q7xUncTcRYvwDZxkW5OD6xflUnF8H4k5s+g4WU50cIh42gzmJ8Y5VNFIHIWs/HkM1lTRNCgT
      kRUWz5+N4zQ3Tk5ORjwV5OpcbNmyhVWrVuH3+1m9ejWPPfYYNpuN2bNnk5mZiSiKzJo1ayxJ
      XmFh4VhIRZ2pxaQ4gC2pkKuvyWCwt4WDh8pImfcuwue4Rv5l60j3WumqO0IwMEwgEiBuLmbV
      ksUkB4yUFn74t3JHRwfV1dXcfvvtKIrC3r17ufLKKykoKOAXv/gFHR0dABQUFLB//34GBwcp
      Li7WHWCKMilDoL7mWnojKg6nE0GSUAQDSjRMMDhAa2vPaPAru4dklxWDFqe1N8KStddw1YpZ
      mDUNFImhoWEi0Rinp+7VGD0YHwwGkWWZkZERwuEwv/71r9m2bRuyLPP000+zevVqUlNTUVWV
      3t5ebDYbXq+XWCxGJDKa/TslJYVgMEhrayvp6ecIYKRz0TM5PYDDzLE9rzKiOZi56DKsfguF
      hu28vK2ZtGmlJNisCKlJo2FSRCsluUns2LMDd04207O9JPhsWGp3suNQnJVL5o0NgTRN4/Ud
      O9n1yqtkZWXx0EMPccstt+D1enE4HESjUex2OzfddBOiKCKKIvfffz+PP/44O3bs4K677mL2
      7Nlce+21pKens27dOiKRCGlpaVxxxRVnnC7TmRroWqCPY0/XAl3U9qaeFshh17PC6Hwoplaf
      brYgprsnuxY6FxFTqgfQ0fmw6A6gc0mjO4DOJc15c4B4vIuTJwc+WGE5RkNDHZFxSLk1PDzM
      9773Pe6++25ef/11FEUZ+11XVxcPPvggX/ziF3nllVdQVZVAIMD//M//cOedd/LrX/+aQCDA
      V7/6VX70ox+NhU3/3e9+x1e/+lU9TdIU5LxNghUlzPCw+v4FATSFQGCY5PO8AKsoCo888ggZ
      GRncdttt3HvvveTn55OTk4OmaTz++OPk5eXx2c9+lvvuu4/c3NyxDbKHH36YQCCAIAg0NTUR
      CoXo7OzE7XZz9OhRhoaGznAmnanB+KwCqQrHj+4nbfpikrQGttU4WJ6vsWP7LnojdhauXAxA
      ZLiL2pNt5C4qoe717XSFgvSHzKzasBZvqIU39pURNbiYt2w1rmgDsqsY50gV+1s0rlwzj/pj
      B0kvXYLHMhqzJxaLUV1dzde+9jVSUlLIzMykqamJnJwcVFWlv7+f0tJSMjMzycvLo6amhn37
      9mGxWLjrrrsoLS3l85//PCaTieLi4jEtUHZ2NvF4fFyaSmdyGadlUI1oNIKiaqDFCUcsdNZW
      krToetalWlHkCHsOn6CsupuVV67GZwLN4GTJhqugsZq+SB9ldb2svv6TOOK9vFlWSUJ2IsND
      XUTiAhligO5gHwMBBwXmtwNWaZqGqqqjmWQEAYPBgHpKKyGKIhs2bODhhx9my5YttLW1sWjR
      IkRR5LbbbmPu3Ll885vfpLKyEoDCwkJqa2tJTk6mpKSEurq68WkqnUll3CbBmqqiqgqB/gFi
      aIhG46lQJRpo4M2dxdISLy0tPWiAyebGZTdhNFkwiCCgoWqgaSoaAl6/k+6uXuJxA4l5qfTs
      3Yu5cDqnPf9YLBYKCgo4cOAA/f39tLe3k5mZyfbt26mqqmLu3Ln87ne/4/777yc3N5fZs2eT
      n59PWVkZiqIgy/JYtpjs7Gx6enqor68nJydnvJpJZ5I5bz2AQROoP/gilZUmUmYsp8RrZcfW
      p3B57XhSC0jJn0Xdjr/xxC4rC1ctxWq1k5EzA6H8IA0DfmwOGwZAtFiwWh3MK07j9a1/IWJI
      YOGK1VhdFjLEY4Rci0lyyxwLGVmReqYswGg0cvvtt/PQQw+xfft2Nm7cSHp6Ok888QSzZs1i
      eHiY3//+94iiyMaNG8nKyuLWW2/lkUce4Stf+QorVqxgxowZ5OTk4Pf7yc/PJxwOk5SURGZm
      ph4ecQoypbRAeoqk84euBdLRuQTQHUDnkkZ3AJ1LGt0BdC5pdAfQuaQ5xzJonOoDe2kLSBgt
      HkrnzybRHqWzUyA9/VyZuzSGevswJXhwmE3nKPMhkUO090tkpHg+8FckSeL555+no6OD9evX
      U1BQMLZ8GYlEePXVV2lsbGTBggUsW7aM3t5eXnrpJeLxOJ/4xCfwer38+c9/xuPxcPXVVyOK
      Irt27aKpqYlPf/rT78gqr3Nxc44eIMbAIOTPKCHXH+fg8RY0bZDGxqH3uJRGf0c7geh5lAxI
      ARpb+z9wcU3TePLJJ6msrKSgoIAf/vCH9Pb2jv3+hRde4PDhwyxdupTHHnuMw4cP88tf/hKj
      0YjJZOLHP/4xw8PD/OlPf+Kpp56iv7+fYDDI5s2befbZZ5GkcVDv6Uwq59wIMzsSSEtLIxTr
      wBY1A9r/b+/sfqOowjj8zJyd2dlhKtNu2ym4bREppNS2pnwsEMVqUqNBzF54gUGvSEgIXPNv
      cMMdl0Z6IdE0UdOowaZUg9SChLoUQ6Fs0bYU2/2is7M7H14UikaqiSELLvtcT+bNOTPnvL+Z
      9+OQnh5n4JPvkNa9xL49L3D9yiwbul/Emf2VBVTwlrg09AXfLqnsevNtYmqW80NDpHIyXa+8
      QVezxMVzSebuTmPXbOStvduQ8ym++uZ7pGgbr+3djjN9ieEfriI1dfDuzkYK6WkGP/sROxKj
      t3c3tdrqqq1QKDAyMsKRI0dob29ncHCQyclJGhsbgeU4gWmatLe3oygK2WyWVCrF4cOHMU2T
      o0ePcvv2bQzDoKWlhYmJCaLR6ErHiCqVx6pv09wv5+n/6GOGJ3Kst5bLDH3F5PV979DkLJLx
      bWZSdygBdmaBu5k8ILNpRx/v7d/NjQsjZHyF6LoYres0Lo9epcQSM/M+8b79bNJLpPNzjAyN
      oTc1I+duMTaeInXzBtbmHnZsbUWWwSsJtvUl6NwQYn42+4+D8X0fx3GIRCJIkkQ4HF5pcwLQ
      2dlJMpnk2LFjRCIROjo6aGtr4+TJk/T395PNZld2+a6uLsbHx0kmk3R3d1ejwBXKqgvA2ryL
      9z/8gH2vbmFuMoUD1DXFeE4PY+j3I3aBTxAElIoOXgAIDUNXCSkGxhqJzNwU80saVlMDWrGI
      A6xtfJ46I4yu68ilAnmhsd5qYvPWl9nSGmVT53YMP83YuQv8XvJZ07CeBiOMZhj8WwxUURQa
      GhpIpVLYts3i4iLRaJTZ2VnS6TQDAwP09vZy6tQpdF1neHiYQ4cOkUgksCwL0zSpr68HoLm5
      mZmZGaampmhpaXksk13l6WNVCXT35kUG5iYRnou5cecjLoywVp3n808HkJdsrJ4oIshy/usv
      CYIAa8seTD3Nld9+JpfXKHqPKFbXa9laL3Hh0mXWRGpo66ll6c51bk5ncCUT+W+bbsDCrWvk
      jBjN8h1+ytTSs+HhB7Kqqhw4cIATJ05w5swZYrEYra2tHD9+nHg8Tjwe5/Tp04yOjpLP5zl4
      8CBnz55lbGyMXC5HIpFYkUt1dXUoisLCwgKWZf2nya3y9LNKLlCAY9u4fgCSTDgcRsgBrguK
      IuOVPKSQIHCLFIouQoQQSgg58CkWi/jIaJqGjI9TKODLAiEJ1LDALQXL93A9JCGQfBe7UCS4
      bwe/hFN0kUMqmipwvQAlJPB9lyCQwfcIZIHAo+jLhJWHPUAdx0FVVXK5HK7rYhjGyjGoQggU
      ReHevXu4rks4vOyFCoUCtm0jhKCmpgZJksjn8+i6vlIRpmkatm2j6/pfpFA1F+j/ba/iDsmr
      JsM9Pp6VBVANhFV5pqk4D1BOHlSflYMHj6lcf6PKObYnZU/XdamyOsNBWSVQOSWX53n4vl+2
      SHS55eSTsAfVXKAqzzgVtQDK6ULLbU+SpLIG4yp5Lv9s7w8N0DtZyspaJgAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Revenue By Year' width='192'>
      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
      GJZ8xgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity By Markets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29+ZMc53nn+cnMuquru7q7+j7R6MbROAiQIEWREklJJsdaacbaGXsdtnfX
      411vzO7M/DqzsbOxEf4b5F3vajyiLc1YGm3Y5MiiZIknCBIgiLsB9H1f1XXfR97v/NAgCJAg
      0QCqgWp0fiIQaFRnPvlkIZ98j+f7Pq8khBA4OOxS5EftgIPDo8QJAIddTV0FgGmaNbdpGMau
      tWmaJrXu4e4UP23b3tLz5KrpVR8Qq1jEzudratM0TIS7tre5Y2yaJoqiIElS7Wxui58WiiLX
      1E8hBLZlY7uULz2urgKgeuEihR+++qjdcNhF1FUXyMHhYXNPARBbnubMxxfIlrXbPk+n06hq
      GVX9fJ9rcWEBG0il04DN7LWLTCysk47Oc/r0GeK56oP47+Bw31RN894CIK/anHjiAONjY1iW
      QWIjSkk1WF5doVRKs7a8RipXohxfJFHeHNSszV5lJV5keWWF6Mw1lPYR+tqbqBR0jn7lBCvT
      16n90NfB4e74FOVexwASbm8DkYCXpZlLfHhhlsauYQYiXrAMcvkK6VyGwbCE1iAAibbeQTLR
      ZYSAlCZxuC2ELEvEKxkufJzFHwg7/TCHR4IkSff27JlahbWVRVKajUdyc/TEs5w4tHfzl4qH
      gT1DtDUFuXVCS1J87GlRWEiV6Qm5GZteYCUax+tvYe9gF02NQWzbSUY7PBruqQXo6+0hVdB4
      8tgRfIqFtB7F6/Oxf2QfHo8LcBFq6EfGRng2p7T6Bwbw+z18I5Cjta0FK7qK5fHSMjiIy+9H
      KxVxHn+HR4VUT1qg3FtvO9OgDg8Vp/vtsKupqxbA0HVcNcwGwmbq3u1271qbLperphnW7fBz
      OzLWtm1j2zYu15f38usqE4wkIdX4y0WIXWtTAqQaB8C23DuAoiDJteuQSLa9+WcnBYCoVDCK
      xZraNA0TaRt0OzvCpmkitkELVHs/LUQNtUBKayt4vVs6tq4CoHLuvDMIdnhg2v7tv8F77Ikt
      HesMgh12NVsOgNXZ63z88XnSJe3uB99CuZDmDhIhh1sQQnA2keAf1lZRrc0v62wiQaJapWgY
      /Gp1hflCAQDTtnlvI8p/WV4iXq0yns3y67VVqqbJZC6HblmMZzPY9TO3UddsOQBKhsQTR/ax
      ODODqVeJJ1IYlk0xnyGeSGMLm0I2TSqdwzR1EvE4papGdmOJYkVHNWxUVcU0dUqFHKWKimHa
      aKq66xNhlhB0Bfw0uT28G42yUCjwy9UVpvM5Xp2ZJuzxErgxmCubJkvFIq/09OJXFN6JrhPx
      +XhjdYVfr61yMrZBoqpS27m0x5ctB0A+scr5i2P4Gpu5cvod3vz1G1yZ22Ds0nmi09eZj8eZ
      mVth9voV8oUcp957h7c/vLz5cOeXGN+oMjk1RWZjlkvXFtiILhLPVJkdn6T2a4x2Fi5ZJqVq
      nIxFGWwI8X5sgxc7uxBAUlUxhc3fryxvLvIQgrJp8p/mZklrGppl8/7GBv3BBlKqytvr6zzb
      3l7bmZ/HmC0HQKApwsjwMNViGuFp5PkXXmSwvYm2rgH2D3aiGSZefxCPSyYVjbPvqWdo9Fib
      JysuSukY8VQWyeXjwOhhwn6FbCpOMlfbWZ+dSNU0ccsSX+vo5FwyiVdROJOIcz2bpTsQwKco
      2ELw3sYGBUPnhc4uWn0+JnNZFFnimbY25osFIj4f/+3gIP+wtlrzJYaPK1ueBerubCddLLNv
      /0F8osJKNI3X66Gvvx+vDAOGxgfnz6B72nnlxDAbazG6jhwi5FOQvQGGtCXoPEy4pQGhuFAa
      +ilr67Q/caS+pqIeAR5FQUIi6HLzh3v34lEU8rqOANySxGQ+xx/tHSan6zR7veR1g32NTYw2
      N3Mw3ExaU/mng3tIqVW6/AHWKmU2tbgOd6NmmWAhbHRdR1bcuFzKfX35jhbIoRZ8Mg36UDPB
      kiTj9fpqZc7B4aFQX1ogVUWx7draNEzcNc5c7hSbpmmiuFw17Qptj5+1rQoheb0ISdqBWiBF
      QfbVthWRdB3Z49mdNg0DucZaoO3yU1IU5BpqgcQWX6R1FQBCVTHS6ZratEwT4y5vgcfXpgWK
      UtPR8Lb4aVkI+dMWQGluRt6iludBqasAqJz92BkEO9D2v/9b/MePPZRrOVogh13NAwXA+tIi
      mhBgq8wvrH3psVqlsGs1QUIILiSTvB1dR7MsNioV3omuUzVNouUyv15bJa/rANhCcDGV4v3Y
      BrplMZHNcjoew7RtZvJ5dNtmKpdztD414oG6QJn1SfJKhG5rmctLZfp62nB5PBi6AbZBuaLi
      9niwkLGya2TlTrrbQrgxyJdUGpvCxNfX6B7o58srOO5sLCFo9nqpWib/sLbKcqnEC52dvL68
      RKxa5Xf6B/iPc7P869FDlAwDlyRR0HXeWF0hq2v0Bhp4byPK9WyWI80tSBLsb2p61Lf1WPBA
      LYCndRAzt8J60WYg7GFxfJKqMJi8Ps38+Bir69N8fGGaK9cmME2DVDLOlbFx0tF53vzl33N5
      Nkoik36sH37Y1PrkdJ0PYjG6A0F8isJIYxNZTaPB5eLXa6v0BoMAhNxuLCFYLBZ5sjVCWtXI
      ahqr5TIpVeWt6BrPt3c4Wp8a8YBjAJkmqUhJaUaWwCXbJONxcmUNb0MrB4/up7drkO5II7Ls
      oiXSiksSxLMVnjlxFEO/N2n1TqVqmvhdCi90dTGbz6NaFlfSaSI+HxlN45vd3SwWi7y/scFk
      Psev1lb5bl8/EZ+Pb/f2IRAcCjcT8fn4x/0D/GZ93dH61IgH6gL19vXhknpowYMwmwh6JOZW
      4hwcHSbkd+PCTV8fgB+XMEivxdg3egiPkSeaLnGorxNFtNXmTuoYj6KgWhYuSeZ39+yhYOgs
      Fov8zsAgWU1jvlDgT0b2kdV1Qm43L3V2sVYp0+B2o9s2R1taORgO0xnw0xMIslIqOVqfGlFX
      mWBHC+QAtZkG3WpVCGca1GFXU1ctgFGpINd4m6SdotvZNi2Q4qKW4+WHoQWSA4G7ljO5Gzuz
      LpDbjRII1NSkpesoNdau7BSbtmFsiuFqGAHb5adcYy3QVqmrABCahlnjPcIs08TcBt3OzrBp
      wX2uzfgibNuG9vYaWny01FUAVD466wyC6xylLULPn3//UbtRM5xBsMOuZltagFKpSDAYIJcr
      EQ43fW4Qtvn7UE0HZw8TzbI4l0zQ4vUx3NjI2UQCS9g809bOQrGAAI42tyBJEhlN42IqSYPL
      zZORCOeSSdp9PrqDAUqGiUeWMYWgw+9/1Le1K9mWFmA9uk5qfZFMxcTUq+TzRWwh0KplCqUK
      a6sr5PN5dNNmbWUVazuc2EbWymU6/QHeWFlmtpBnvVLmaEsr6+UyVzIZLqfTLNyocTqWThNw
      uTgQDvNOdB1Fkvjl2iqTuRxnEnF+sjBf84rYDltnW1oANRvj0oqbb35rmKtnT6J4vSi+dsr5
      OE2t3ZQLaRZLeVyRvei5FL39fdvhxraxJxTil6srdAUC+BUXSVXljdUVGt1uDjY1IZBYLhXZ
      29iIjWA8myNWrTIUCvHexgaGbeGVFd5eX+drnZ201ngVnMPW2ZYWwNfcyVMHOlhYTWBLbnq6
      2lBLZdwNYbraW2gIt/PEof24lZ355ns/tkFe13m5p5eQ280/6R/AFoKAy8V4NsdELkOHP8C7
      0XWGQiH+m75e5gsFrmYyPN/egU9xUTB0fqu7h5ymsVGpPOpb2rVsSwvQ091LMBhAzubp3jfM
      SrzIsRNHKMRXSGQKdPf0Ink99LYJzKaHs/StluwNNWIJwVQ+x/HWVqbzZU5E2jjc3MxENosA
      RhobUSSJgMvFRDbHHwztpd3v51wyycvdPfQ1NFA2DHyKQsXaaZ3Ax4e6ygQ7WqD6ZzumQQ3D
      QKlxIszRAjk4bIG6agH0chlZq+0aAdMwcNV6T6udYtM0cSkKtZxvNi0bX1ukZvbg0bYAdZUJ
      ljweXDdWRtUKW9dx1Vq7skNsim3QAtk31i4/LtRVAAjDwCrXdkbENg0sV23frDvHponl2iy8
      +2XIwWDN9/3aKdTVXVdOn3EGwY+Atn/3f+A/euRRu/FIcAbBDruaBw4AUyuRzBQQlk6+VK2F
      T3WDEILZfJ7T8RiaZbFaLvFhPEZB31zT+0Fsg8KNPrFp21xKpbiYSmLaNmlVZSafxxaCpWIR
      w7ZZKBScxex1xgMHQKWY58K5C5hqgbm1BLpWpVSuIIS4+bNtW1TKZSqqjm2ZWLbAME1M00TX
      VCy7Ph8KQwji1SqaZfOLlRXWymW8ssLfLS2iWhYtXh8/W1wANgVyAZeLpVKJsUyGq9kMb6ws
      YwnB68tLnInHmS3Udq2Dw4Pz4GMASWF0uIPJ+Rh4Qixc+5gL1xd45uXvkV6ZRNcqjOzfy7Xx
      JG509gyFcbfsJ744TsgjyFdlRo8cJuitq+EIAB5ZpjsY4L8sL/H7e/bilmV+tjDPN7q78SkK
      ry8v8VTr5pRgwOUiXq0yncvxfHsH+91NjGezACTVKv+wtsqfPfmUU8+nzqjJGMDT1IO7EqWs
      C8qmwtOH+kiliwRbOuhubUQA7T2DRBq8WECllCdfqIArwPHjT9Tlww+bb/Ufz87yTwf2EHK7
      +eHMNP+ot4/BhhCWsPlng4NcTKc4E4+zVikzFApxrDXCZD5HXtepWiYV06TN5+eVnl5ObkSd
      LlCd8cBPnr8hjBuFliNP01xVkKsWBU1woK2Fa2feYVqV+WZXJ4n1JfYfGqan2cvM7CIj+/cT
      DnpR6nwY/lxHB5O5HMNNjTzf0cF8oYBp2xi2Tbxa5U9G9hGvVgm63FzLZGjyuHkq0sbpeIzD
      4RZWyyW+29fPnlCI2ULBqedTZ2xbJljYFsVCHqF4aQx6MW0Zt+vLn3ZHC/RouJdpUF3X8dQ4
      YfdYZoIlWaEx3HLz3+46f9M77E7qSwtULCJXazuVahgG7hprbHaKzc26QMpdB95yOLzlbY+c
      FmAbkXw+XKFQTW3uFN3OdmmBXDXWAj1u1FUAYJo1F1sJw8A2jB1pU/L5kJTHvXj8o6WuAqD8
      4WlnEHwL7f/X/4nv0KFH7cZjjTM0ddjVfGkAlLIJSpoAS6Wsbn3daqVc5tORtU2lXOWLRtrV
      cpnabo19Z4QQrJfLNxegJ6pVziYSVEzzZo3+T9Ati7OJOGcTcbQb+3SNZ7OYts1qqYRqWayV
      yw/Ba4ft5osDQNgsLc+yML8KWpKl9SKabmDbFpqqous6qqphC4Gha+iGiRA2qlplaWkF2zSo
      VlUs22J5eeXmsbqmounGDa2QysriMg9j77yqZXEhleSt9XVU0+Rv5ufwKjKqZTGVy93U9ACs
      lsvMFQp0BQLMFwqMZTJcyaS4nE7zd0uLvL60SNF4vBaG7Fa+cAxgVrIQHIByCotWlmbHWV4S
      PHOok4mJOCWtQKsXmkaeZOqjd9DdzZw4PMhGuoBhuWhenuC9s2Psf+ob2OkYV9JxInsPsH7p
      fRbLfn7npcOMz26g64I9D+FGAy4XT0UivLexQUJVyek6F1IpKqbJM23tfBiP3zy2bJqkNY0z
      8TjPd3SyWi4hEHy1rYNr2SyWEPz+0N6H4LXDdvOFAZCKr7E8n0QyNTq6G9k7ehypugouLweP
      HCedWeVABM7FK7T0jNDXE6GUzXNgdJTVxWUyhSonnn6CeCZHa3MHHWEX8WIMV+t+eohRqJbp
      HjpIJb78UG7UEoKKaaFZFiG3e1Oy0BphrVymYpoY9ubvziYS7G0M8Ud7h/mb+TmuZzOMNDah
      yBJLpRKHm5tp9nqZLxQYcXZq3PF8YQA0tPbzyitPILQyuqnjD3rA6sLrVRDCg9fbBV44EAyQ
      Xi5T1mD/wWEmJuZo6eoh7NZZTJQ4ONKBlo+zlhccPHCY5cmr2G0H6O5pZ25ykkBr10OZiioa
      OtP5HG0+HyXD4HsDg8wXCnyru5vTiTiHmpuZyedp9Ljxu1ycSyR5sbOLw83NnE0kEAieaWun
      JxhgsCHEQrFw94s61D11lQl2tEC386DToMY2JMIet0ywMw3qsKupqxZALxSQiqWa2jRMA3eN
      qy08LJtKpBXZe/+lI50WYKdpgfx+3I2NNbUpdB13rTU2O8Smw92pqwDAtrFrXBlOGAb2PTZy
      kiwj1ViZ6VCf1FUAlE99UBeD4MDXv0bkX/3LR+2Gw0PAGQQ77GpqEwCWxuLcHIurMWzLoKJt
      XSpcKm190GvaNmPp9GZmVgjWymXSqnrz92XT4FIqRVpVqZgml9Mp8rpOVtMoGQbxapVKjTfi
      dtjZ1CYAtASxgoSVmmMlkWd5I41hmgghME0Dy7IRto1hGFi2jW1bGDf65tOzs1u+zJvr62R1
      jf+8ME9CrXJyI3qbhOFnCwtYQvDjuVleW1pEsyxenZnmbCLBlXSan87P1eR2HR4fajYGiK8u
      Ug26eWoIZicniS0K9vb3MbseRwg3h3rcjEd13B4f+9pk3jtzhf3PvnxP1+gK+Hk3GkUIaPH6
      ON4aYe4WFWer18u5ZIKQ241pC6qWRdk0qVomv1xb4XcH9xCo8WbUDjubmo0B9h19muMjTWyk
      NfqGD3P04CDlVJ6+0Sdo9kkIt4/Ro8cIyibJosaJ4wcp36OkeCyT4bt9/bhkmYKuY9g2lrAp
      6Drnkglm8nl+d88eEtUqL/f0EHK7ccsyPsXF9/oHuZJOozvbETncQm1eh54WyrGrzPnDHD/U
      SlkHn+wjeKyPpakxmnuHcKmrjF0d44knnsCnJ5lfz7FvoAO33bzly/z+niHeiq7zYmcXlhA3
      3/4JtYpPUfjn+/bxYSzGfze0F9WyWC2V+RcHDt7ci2u4sZGCYRBxlhk63OChZYJNQwPFy5eV
      BqoXLdDdpkG3Ixu6XRlWJxNcJ5lgl3vn7Qbp8PhTVyNC/9MnCOzbV1ObpmngukfdjhwM1NQH
      h/qlrgJADgZxh8O1NboNTbbD40NdBYAZjaJOz9TUpmVZaPcw6G341jedWjy7iLoKAG1mlsKr
      f/VIfQi+9KITALsIRwvksKu5awugl0qUhKDJZRMrCXrabu+j55Mx3M2dBL7QkkUslqGjs+2O
      dfGTsRjNnZ13dWS1XOJULEZW0/h6RyfjuSw5XeeFzk4ON7cQq1R4dyNK2OPhqUiEt6NR2nw+
      nmhpZaVUIuhyIUsSB2o9xnDY0dy1BTBVlZKqYullMoUS6VQGYZZJ5yrMjV/m/OVxdEtn7PxZ
      VhJ5CtkUU5PTpOLLnP7wI/KqQXRhio/Pj1E1DCYunWVsegnb0pm4fI5L1+e3VBirL9jAHw7t
      xbBt9oRC/MGNsiSd/s0Zm8vpNAfDYRaKRf7/xUVe6uxiNp9npVRiKp/jN+tr9Dc0PNCX5fD4
      sYUxgMnUlcssCAt/3xMkN1bJJBTc4UYI9jA65GXt+iXWC1U2JibpC9qEh49i5FaxrCJXry3S
      HGrjQFeQ+eV11KrB/Px1Ir4K/u5D7PWubNnZa9ksg6EQjR4Pyzfe6q03lgyGPR4+TiSxhOC5
      9g5+vrLMcrnE8dYIF1MpDobD+Jy+vcNn2MIYwMXBYyd4/itPEfAodHc0sZTRaQu4WZm7xvRS
      nIbmMLKAtrYIvlArbc0NZNNpJI8f2TYpp9c5d3WWBp8gmVPxu13g9jB37RxLsdyWHLWE4J3o
      Oq909wBwciPKi51dVEyTP58Yp2KZmMJGsyzcskyDy81wqJFWn5fn2jto9/k5n0w6e3Q53MY9
      SyFmrp4n2HOQntbadyfqQQrR++O/vutmEY4UYhdLIfYdffq+nXJwqDfqKg8gh0K4BwdralMI
      cU9vQGc3ld1FXdUF2o59snZKd8XpAjmV4RwcHjp11QUyYzG02Xtft+vq7MQ3enAbPHJ43Kmr
      ANCmpu9rFij4wgtOADjcF04XyGFXc58BUCIe/+J6PvF4nPsZWtsI3lhZ5m/mZkmqVWwh+NHs
      DEvFIrBZF+it9TXOJ5OYts3peIxTsQ0sy+IXv/gF8Xicd9999/5uyWFXcp9dII1sVtDR0UAq
      nSbS5CNVUjBzS8TKbrxug6YGP5qQyawtk6xKPHlkmLmJa7hbB2kJyIQCXuK5Ci0BBfxh/K7N
      mYoXOrs4n0oykc3hVRQS1SrxapXBUAjB5lZHi6Uix1pbafZ6+TAW41u2xZkzZ5iYmOCP//iP
      a/ftODz2PHAXaHllBfQMc7OLRCsuRod7UbMxzlyeIRCQSRdsehSL2bVZlNYhjPgssfUoC/EY
      i4vrrCyvIyufOCMxnc8zlcvhlmXe24jS5veT0lSEELhlmQ6/Hwk2f/b5+URiOj09TSaTobW1
      9UFvyWEXcd8BsDBxiUvjc5jFJB+dv4rt8aFl1rk2tYS3uZO97R6iqQKhxiZ8Pi/eQJD1mavE
      yzCwp42Z8XUGIy5SthvvjXnqkmkyXyzglmUKhs63e/vQLQvDtvn/piZZKZX4zdpmF+h6JsOv
      1la5ms4wVygwOjrKd77zHX72s585eh+HLXOfiTCBaVogScgSCLFZUhxh3/xZAgTctgbAti2Q
      ZBRZwrYFkgRCSMjy5lG5t94m/Zf/AQCXJCFJ0s3S5rYQyJKEaW+KpxVJwgIQgsaXXqLlX/wv
      KIqCZVkoinIz+bNTklZOImyHaIE2ke5sWFI+c9TtKMqn53zy0H/2/8b9mS9BvnHAJ397bpE0
      f/KTIn3qz91u2MHhVurqaZGDQdy9vfd8ntKy9epyDg63UlcB4H/6BI3PffVRu+Gwi3ASYQ67
      mrpqAcx4HH1h8Z7Pc3V04N1f24pyDruDugoAbXLqvrVATgA43A9OF8hhV/NAAWBpJS6cPc34
      /BrxROK+bFQrFT5JRNgIfrm6wk/m50hrKrYQ/M38HMulT7VAP19e4u+Xl1mvlPnJ/Bw/mJpk
      JpflV7/6FclkkpMnTz7ILTnsMh4oAOZnZth79BmGe9tJRpcZu3SRbMUgtTbPtalFLLXA1NQk
      43OrqMU049fGWIxmKKajnL9whULVIJ5IcGsm7vmODjr9Aa5lMlxIJVkrl4lVqgBcSafxKAo2
      gqym8Yd7h7GFIKgofPDBB/zVX/0V+2pcXdrh8eaBxgCqkGnyb1Zcs22JPSN9LE1NsLy6BLJC
      i9JLTu7FX4mST2bxRPZQSK4QaFTIJZa56gnjt7IM3lgHLCMxmy8wns3wdFs7Jzc26A4EyOoa
      Qgiyuk7E60OzLXKaznKpRMDlos3nY3p6mpGREdra2mrwtTjsFh6oBehpCfDh6bNcm1nGEwjR
      GGrA43bT1NRIR1cvDX4X4ZYW/D4vistDU2MjXq+bVDpNUzgM3L5fV8k0WS6XaHC7SWsq3+jq
      pmgYlE2T/zA9xVAoxMmNKKfjcQ6Ew/xydYXv9PUDMDo6ym//9m/zt3/7t44WyGHLPNiieCHQ
      dR1JcaHIm5oe2xYI28K0BG63ApIMQmxqg6RNvRDCxjBtFJcLCYFyQ96Qe+tt4j/49wjAf0PP
      Y9o2EmAKgUeW0W5ogbyyjGHbuGWZ4IsvEPqf/yc8Hs9NrYqjBXK0QNu/RZIk4fHevvWRLEsg
      yyiu24+DG9ogSQZkvF9QpdD/GYddN76UTw6/tbzhJ7ogCQnvDT+8XmcrJoetU1d5ADngx9XZ
      ee/nhZu2wRuH3UBdBYD/mWdofP75R+2Gwy7CSYQ57GrqqgWwkkn0peXPfe5qb8M7PPwIPHJ4
      3KmrAFDHJ+6oBQq++IITAA7bgtMFctjV1LwFELbJ3MRVUqqLY0cP4fd88a4spqEju9w3lzsC
      XM2kSaoq3+zq5u3oOglV5bmjR3gRqFarvP766+i6zve+9z1ee+01LMvi29/+NuPj45w4cYLx
      8XFeeOGFWt+Ww2NKzVsAs5Qhrro4dmgYxSiSrZhkczk0rUJibZlYKsvE1cusxlJcPPUe569N
      oJqfni8hMZHLYQvBbKHAHwzt5XDz5pJHTdP45je/SaFQ4OLFi1iWxZ/+6Z/S3t7OyZMnefXV
      VxkaGqr1LTk8xtQ8AFyhCCPtfs6eu0Q5vcZCSmNpaYliLsrSRpUGt0UykeD8hau0dHQztHcP
      tzYSAw0Nm5UmgO5AgH8/Ncmba2sIIQiFQrzxxhs0NDRw9OhRLMviz/7sz5icnGR6eppkMknn
      feQRHHYvtW8B1AqxVA6vW0GXPMRnx5hfjSMUL4MDfRjVHHiaCPnc+L0wN7+EcUMSZAnBexsb
      zOTyjGez+BUXIbcH3bb4/ve/z+nTp/noo49obGwknU4TDofx+XwYhsHo6CivvPIKr732mqMF
      ctgyNd8gQwgbTVURkoLP60GtVkB24/UobOo9bapVFcXtwe2SUFUDn9+PLEH2rbdZ/Yv/FwF4
      FQUhBIYQdP7Wtwj8j/8DbrebUmmzJmkoFKJSqSBJEqFQCFVV8fl8VKtVAoGAowXC0QJtvxbo
      DkiSjO/G3r0A/kDwM0coBIKffha4ZYdtCQjfQcujSBINN/b4vVXrc+t/RCCwec1g8LPXc3D4
      YuoqDyD5fCiRyOc+l0OhR+CNw26grgIg8OxXaPr61x61Gw67CCcR5rCrqasWwEqlMdZWP/e5
      KxLBs2fPI/DI4XGnrgJAvX79C7VArf/b//oIPHJ43HG6QA67mjsGQH5jkfdPneLK1BKVSp5y
      Wf/cMZlU6jNL2reAkSeV+7ytWxnPZjm5EUUIgRCCv1taZK1cBjalED/5yU944403UFWV119/
      nZ/+9KcUi0XeeecdstksH3zwwb165bCLuWMAFAo6J772PHoxRaWcY35yisX1FKVcHlPY5HMF
      kuvLjI+PU9RM4qvzTM4uYtg6q/PzTMwuY1sGS7OTRNMFytk41yamUSs5pqdnmV5c/8JsrWHb
      XMtmAbicTjOVyxGtVAB4++23GRwcZGlpibfeeotcLofH4+HcuXO88847vPrqqwwMDGzTV+Xw
      OHLnLpBR5KMPz6DjQdgW7mCYYmKdpYVFNEwW5peRJIXOrjamJyZJxze4PnaJaDP30OQAAAzG
      SURBVGqDtQ0Nq5BhbW2a82NTnPvoIrPz0xTKGpZtI7n8FLPJL9xFcigUQpagYpmcim0w0tRE
      UdusC3TgwAF+85vfMD8/j2VZLC0tcfXqVdra2piamiIej9Pd3b2NX5fD48adA0BSaGxqxCiX
      MRU3kUiEBr8Pv8fm+tg1koUqtqWxtryCy62QrUJPZwTLMGmOtBNuCKJ4vHR09rB/3x46Orup
      pjdIFiq0tHXQ2BDA1CoUSlXSmczNy1pC8GE8xnyhwEw+z7HWVtbKZRKlIn/xF3+BoigcO3aM
      9vZ2urq68Hq9hMNhMpkMo6OjfOtb3+LnP/+5owVy2DJ31AJZhkaxrOL2+vB7XYCMbVvIkqBU
      VvF4vShYVFSDhlAIQy1jChmfzwNiU+8jKTLVUgkUDx5FUNUsgkEfgs3aQLIElpCwbQvvDUlD
      9q23Wfi//x9sNrdDDbndaJZFw0svEvjv/wi/308mk6GhoYFgMEgmk8G2bVpaWqhUKgSDQUql
      EqFQyNEC4WiB7lsLpLi9hMOfrfezeWhjo/vmZ01e/+bxgYbPWNi8kWCo8eYnbu/nf397xZ9N
      LVCb33+bJa+i4JFlmpo2S5/cKne+dUvU0A25RGNjIw4OW6Wu8gCS13PHGj9yIHCHox0cHpya
      y6EfBMMwcLvddz/wHtgp3RWnC/RoukBOIsxhV1NXXSArk8GMRm/7zN3bi8spee6wTdRVAKhX
      r31OC9T8J/+c0D965RF55PC443SBHHY1NQmAdDqNbelEN744w7tVpnM5PohtYAvBxVSKH//m
      16ysrCCEwLIsTp06xaVLl7Btm7Nnz/KjH/2IdDrNyZMnyefznD59uha35LBLqEkApNJJoouz
      CI+fTHyFyZlFTFMnFl1lZm4Zw6iyODfH0noSrVJENWzyhQLlcplkbJ2K/qmsrmQaXMlksISg
      yePmqb4+XnvtNQBM0ySXyzE2Nsby8jKvvfYavb29KIrCm2++yQ9/+EN6e3trcUsOu4SaBICa
      jTGxnCPSHCQdW2Pq4vvMrKVZ2MgjGRmy6RiJkovc8gIrG0ukyiZz8/OsL06SKtl4lE+n6UYa
      m5AlcEkSmmXz92Nj/N7v/R6StLkJxsjICJIkkclkGBgYoFgscvr0aSYnJ4nFYvT09NTilhx2
      CTUJAF9zJ189Nsj07ArZYpV9Qz1UVYOWtg5ampuQhKCYy1A0bLyKxPLsJPFMCTyN7B/qxaVs
      umEJwcfJBEvFIuO5LK/OTPPk8AjFYpEf/OAHrK+vc/r0aa5fv47b7SaTyRCNRgmFQhw6dIhv
      fOMbvPHGG44WyGHL1CQR9knCRdN0hKVhWOD1B5AlCVmyQU1wdRlGBlsJeBXy+RIevx+PS7kt
      UZN9622mvv/nCAQBlxvdsgj+7j+j67vfQQhBIBAgHo8DEIlEME2TSqVCR0cHhUKBpqYmcrkc
      zc3NjhYIJxH20OoCfZK99fm8gJfb1TwKBHs4PvrpJ80tzXe0IwE9n6nr09zRQail5ea/P9lS
      9RPC4fDmcTfqh7bccqyDw92oqzyA5HYjfyYAJHdduejwmOFogR5jm04XyNECOTh8KXUVAFYu
      hzY796jdcNhF1FUAqFfGyPzlXz5qNxx2EXUVAA4OD5uaB8DK9BgffHCaeF697XPLunsVIQG8
      OT3Nj370I4rFIgClUomf/vSnvPXWW1iWRSaT4cc//jG5XI7Lly+zvr7O9evXneSXw31R8wCo
      CB9fe+5plmcnSMdWmV9ao5BN8t6775LIFUisrzK3uIpp6iwvzLKRyt881xaC4/0DdHd3c/Lk
      SQBOnTpFZ2cnY2NjRKNRfvGLX3Dy5EkymQwffvghf/3Xf017e3tNZzocdg81D4Byao0PTn+E
      O9hMbGWBs2dPkyjahEIh/F6bufkoWixGWq8yPz3BB+9/jHbjXEWSWIht8N57793c7K6zs5NT
      p06Ry+WIRqMYhkFrayu6rnP27Fls26bNWTDjcJ/UPMsUjPTy1IH9YJY583GMfXt6kBUvwiij
      agat7V1EZJVcKUuguY8OVxET8AJl06QMHD58mOvXr/P+++/T09NDX18fsViMXC5HMBhkbm6O
      5eVlnnvuOYLBIGfPnuXZZ591WgGHe6bmATA0dKOMuSvA0cP70YWLUDBIW/AYkjfInqEwCoIm
      RSYsB3F7gzelEwGXi30tLbQ++yz9/f0kk0kikQhra2v4fD46OzuRJImXX36ZxsZGvvKVr+D3
      +6ncKJ3o4HCv1DwAPs0SSjQ0farLcYdbP3dsa+T2rosE9DY10XWj+9PV1QXAns/sDRC5sY3S
      J9fy3mFfMQeHrVBX06CSoiB5nIfZ4eHhaIEeY5uOFujuWqC6CgBd12s+kLVtu6ZfrGNzZ9gE
      EELc9XmqK62xJEk1bwG2o1XZKTZN00RRlJq+VHaKn7ZtI4RAUZQvPa6uAmA73gKOzd1pc6vB
      VFddIAeHh01dtQAAwrYxLRuXS7nZhxNCIMkyW4npzfMtJFlGkSVM81Nbsixh2+Ie3jgCy7Jv
      XtuyTCRZQZEkTNNEVlxICJBlhG1v0Uex2TwjocgypmEgAJfLhW1ZCElGkYBP7luStvQ2s20L
      y7JRXC6wbSwhcCkuhG1iCwlFkRGAhEAgId/NphCbNm1wuRQsy0SIGvhpmVi2wOVyIYS9+bPi
      QtgWtuDe/bz13hUXYGNZNrKsIEvc4VkCWf7UZt0FwOTlj0gVqnTuexqKG7Q1eYnrAfYPdGzp
      /OTSVS4vlRkcGkIurBLNlGkbPISsZekKe4hWAhzcszVbaAU+vjhO1+ABIp4SF68tIvmaONLf
      wNjcOp5ghP4GhVB/O/NzaZ48OnJ3m5bB7NRVSnYrTx3p5v3fvEmgo5/D+3u4fPEqluznQE8H
      UneEjaklDh87gnsLkb8wcZlErkSoYy9acpGSZrH/2FMsXz1PWZcYfeIYmllFT8WJDB+hJfDl
      /Xjb0rk+dplsSWVo9Ciz58/gj/Rx6EAvVy6OYUpeDvb3QEcz8ZklRo8eua28zRexODVGPJOn
      oXM/ZmqBgmowcvQEa+MXKOkwevQ4qlbCyiVpHjpCa/Du443k6hzza0mkQIQ2O8OaLjE4uJ/q
      xjSJgkr38FHsUpKwx6ba0Mtg+6d7SNRVHgDA9jbywksvoaZWycWXGFvKMtzXvqW3P0C5WEJI
      0NQURJca+foLX8EsFMjHFrk8n2ffYPvWnfE2cXR0GLcM5XyBQ8++wEBIYj6n8/zzXyfss6iW
      0nzw0XUOHty7NR8VD/sPHaLBLYNRoKQp+BtCGNU8ew59lSMDIVLFMuc//Ij2oRHc8tbufO/o
      cQZ6Ogi5ZYKdgzz75FGK8SmCPcd46Xg/0UyF6QtnMML9d334ASTFw+FjT9Hd3krQpVFSZXwN
      DdhqnoGDz3J8qIlkocKFDz+idWAEj7K1R6mjswPDkmn0Kfjb+/jqiScpxacIdB/hpScH2chW
      mLn8EWpj75YefoBIewfCtgiHm8hXq8hCpqnBheVv4+vPPUO1lCW+NMFCQaa/LXTbuXUXAKau
      o6l5bKWBcMcgHQGbQuXLt1a9lY7hY/zW108wNzmOaVTRq1Vsl0JTxwCdAZN8xbwvvxRFolqp
      UtYsgpJJSdMwTRtvsJV9gy0k0sV7tmmLEC9/92UaKklSmo1aLVMqa/g8AQ4dGSEd33qpyZX5
      GbwtA/R3htCqKmq1hOwNo5cLFEoqAZ+XkcOHKadimFuxaRvMTM3QPTRKONjMb33nZZq0DAnV
      Qq2WKJY0/F4/h46OkEkktuinjSvQxjPHR0jGU5t+qkUkbxN6uUCxqOL3ehg+dIhqKr41PxEY
      ko9nnnmSYjLByLGv8NXj+5manMPUqqhqFUlS6OjfR8AuUzXs286uuwDo6whz/tIcQ8N9hJub
      GTl4kGIut+UHQSum+fjseXr27Gewt5ULY7P09XXT3NzC/sOHyKeTW/bFLKe5NDbO9MQ4Smsf
      ydnLuCI97BsaZHbsIg1tvTS1NDM4NIpUzWJtwUfbULl87gIrqwuspwvMXL1AWg4x2NWPlp4j
      r0To7miira2fiE+gWfbdjQLZdIyJsQssJDUiHoPJ1Ry9fcO0enNMpyUG2xtoau3mQH8ruaJ6
      V3u2aZBNx7j48VliuRKz1y6SFAEGuvoxcwtkpBa62xuJRPppD8qo5lZ2jRaszY9z4doyfXsH
      afPbTCym6OsfIeIrMZWyGegIEW7p5sBghGyhuqV7z8WWOXtujJauLirpdc5eHGdweB997UEu
      X1+gr7+XcGsboweGyGQKt53rzAI57GrqrgVwcHiYOAHgsKtxAsBhV+MEgMOuxgkAh12NEwAO
      uxonABx2NU4AOOxqnABw2NU4AeCwq3ECwGFX818BxSsF4IeHHwQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='189' name='Top 5 Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='189' name='Top 5 Products' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='29' name='Year' width='192'>
      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
      yu/YvwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
